{"version":3,"file":"object-groups.js","sourceRoot":"","sources":["../../src/models/object-groups.ts"],"names":[],"mappings":"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","sourcesContent":["export class ObjectGroups {\n    constructor(prototypes: any) {\n      for (let i = 0; i < prototypes.length; i++) {\n        this.registerObjectGroups(prototypes[i].ObjectGroups || {});\n      }\n    }\n    registerObjectGroups(groups: any) {\n      for (const g in groups) {\n        const self = this as any;\n        self[g] = self[g] || [];\n        self[g] = [...self[g], ...groups[g]];\n      }\n    }\n    getObjectGroups(object: any, customGroups: any, keys: any) {\n      const prototypes = [];\n\n      let proto = object.__proto__;\n      while (proto) {\n        prototypes.push(proto.constructor.name);\n        proto = proto.__proto__;\n      }\n      const protoGroups: any = {};\n      const self = this as any;\n\n      for (const i in self) {\n        const grp: any = i.split('|');\n        if (grp.length === 1) grp.splice(0, 0, 'Object');\n        grp[1] = grp[1].split(':');\n        if (prototypes.indexOf(grp[0]) !== -1) {\n          const properties = grp[1][1] === 'properties';\n          if (!properties) {\n            protoGroups[grp[1][0]] = protoGroups[grp[1][0]] || [];\n            for (let j = 0; j < self[i].length; j++) {\n              const propName = self[i][j];\n              if (typeof propName === 'string' && propName.startsWith('constructor:')) {\n                const constructorName = propName.replace('constructor:', '');\n                for (let k = 0; k < keys.length; k++) {\n                  if (object[keys[k]] && object[keys[k]].name === constructorName) {\n                    protoGroups[grp[1][0]].push(keys[k]);\n                  }\n                }\n              } else if (typeof propName === 'string' && propName.startsWith('type:')) {\n                const typeName = propName.replace('type:', '');\n                for (let k = 0; k < keys.length; k++) {\n                  if (object[keys[k]] && typeof object[keys[k]] === typeName) {\n                    protoGroups[grp[1][0]].push(keys[k]);\n                  }\n                }\n              } else {\n                protoGroups[grp[1][0]].push(propName);\n              }\n            }\n          }\n        }\n      }\n\n      for (const i in customGroups) {\n        const grp: any = i.split('|');\n        if (grp.length === 1) grp.splice(0, 0, 'Object');\n        grp[1] = grp[1].split(':');\n        if (prototypes.indexOf(grp[0]) !== -1) {\n          const properties = grp[1][1] === 'properties';\n          if (!properties) {\n            protoGroups[grp[1][0]] = protoGroups[grp[1][0]] || [];\n            protoGroups[grp[1][0]].push(...customGroups[i]);\n          }\n        }\n      }\n\n      const groups: any = {};\n      const assigned: any = [];\n\n      for (const g in protoGroups) {\n        groups[g] = groups[g] || [];\n        for (const gg in protoGroups[g]) {\n          const gKey = protoGroups[g][gg];\n          const reg = new RegExp(gKey);\n\n          for (let i = 0; i < keys.length; i++) {\n            const k = keys[i];\n            if (typeof gKey === 'string') {\n              if (k === gKey && assigned.indexOf(k) === -1) {\n                groups[g].push(k);\n                assigned.push(k);\n              }\n            } else if (typeof gKey === 'object') {\n              // Regex\n              if (reg.exec(k) && assigned.indexOf(k) === -1) {\n                groups[g].push(k);\n                assigned.push(k);\n              }\n            }\n          }\n        }\n      }\n\n\n      if (assigned.length === 0) {\n        groups['properties'] = keys;\n      } else {\n        groups['properties'] = groups['properties'] || [];\n        for (let i = 0; i < keys.length; i++) {\n          if (assigned.indexOf(keys[i]) === -1) groups['properties'].push(keys[i]);\n        }\n      }\n\n      for (const group in groups) {\n        if (groups[group].length === 0) delete groups[group];\n      }\n\n      delete groups.hidden;\n\n\n      return groups;\n    }\n}\n"]}