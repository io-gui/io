{"version":3,"file":"object-widgets.js","sourceRoot":"","sources":["../../src/models/object-widgets.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,aAAa;IACxB,YAAY,UAAe;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3C,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;QAChE,CAAC;IACH,CAAC;IACD,qBAAqB,CAAC,OAAY;QAChC,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;YACxB,MAAM,IAAI,GAAQ,IAAW,CAAC;YAC9B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IACD,gBAAgB,CAAC,MAAW;QAC1B,MAAM,UAAU,GAAG,EAAE,CAAC;QAEtB,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;QAC7B,OAAO,KAAK,EAAE,CAAC;YACb,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACxC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;QAC1B,CAAC;QAED,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,MAAM,YAAY,GAAQ,EAAE,CAAC;QAE7B,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;YACrB,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxB,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBACpC,MAAM,MAAM,GAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;oBACrB,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC7C,CAAC;qBAAM,CAAC;oBACN,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;gBAC3B,CAAC;gBACD,IAAI,GAAG;oBAAE,YAAY,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;;oBAC/B,UAAU,GAAG,MAAM,CAAC;YAC3B,CAAC;QACH,CAAC;QAED,OAAO;YACL,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,YAAY;SACrB,CAAC;IAEJ,CAAC;CACF","sourcesContent":["export class ObjectWidgets {\n  constructor(prototypes: any) {\n    for (let i = 0; i < prototypes.length; i++) {\n      this.registerObjectWidgets(prototypes[i].ObjectWidgets || {});\n    }\n  }\n  registerObjectWidgets(widgets: any) {\n    for (const g in widgets) {\n      const self: any = this as any;\n      self[g] = self[g] || [];\n      self[g] = [...self[g], ...widgets[g]];\n    }\n  }\n  getObjectWidgets(object: any) {\n    const prototypes = [];\n\n    let proto = object.__proto__;\n    while (proto) {\n      prototypes.push(proto.constructor.name);\n      proto = proto.__proto__;\n    }\n\n    let mainWidget = null;\n    const groupWidgets: any = {};\n\n    for (const i in this) {\n      const id = i.split('|');\n      const cstr = id[0];\n      const grp = id[1];\n      if (prototypes.indexOf(cstr) !== -1) {\n        const widget: any = this[i];\n        widget[1] = widget[1] || {};\n        if (widget[1].$value) {\n          widget[1].value = object[widget[1].$value];\n        } else {\n          widget[1].value = object;\n        }\n        if (grp) groupWidgets[grp] = widget;\n        else mainWidget = widget;\n      }\n    }\n\n    return {\n      main: mainWidget,\n      groups: groupWidgets,\n    };\n\n  }\n}\n"]}