{"version":3,"file":"io-object.js","sourceRoot":"","sources":["../src/io-object.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAa,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAClE,OAAO,oBAAoB,CAAC;AAE5B;;IAEI;AAEG,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,SAAS;IACrC,MAAM,KAAK,KAAK;QACd,OAAO,SAAS,CAAA;;;;;;;;;;;;;;;;;;;;;;;KAuBf,CAAC;IACJ,CAAC;IA0BD,OAAO;QACL,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;QACxD,MAAM,QAAQ,GAAgB,EAAE,CAAC;QACjC,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE;gBAC3B,UAAU,EAAE,SAAS;gBACrB,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;aAAC;SAC9B,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,QAAQ,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE;oBAC9B,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB,CAAC,CAAC,CAAC;QACN,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5D,CAAC;CACF,CAAA;AA5CS;IADP,QAAQ,CAAC,EAAE,CAAC;uCAC8B;AAGnC;IADP,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;4CACK;AAGrB;IADP,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;wCACW;AAG5B;IADP,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;wCACE;AAGlB;IADP,QAAQ,CAAC,IAAI,CAAC;yCACU;AAGjB;IADP,QAAQ,CAAC,EAAE,CAAC;uCACS;AAGd;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;0CACd;AAGlB;IADP,QAAQ,CAAC,QAAQ,CAAC;sCACE;AAlDV,QAAQ;IADpB,QAAQ;GACI,QAAQ,CAyEpB","sourcesContent":["import { Register, IoElement, VDOMArray, Property } from 'io-gui';\nimport './io-properties.js';\n\n/**\n * Object property editor. It displays a set of labeled property editors for the `value` object inside io-collapsable element. It can be configured to use custom property editors and display only specified properties.\n **/\n@Register\nexport class IoObject extends IoElement {\n  static get Style() {\n    return /* css */`\n    :host {\n      /* Panel */\n      display: flex;\n      flex-direction: column; */\n      padding-left: var(--io_spacing);\n      padding-right: var(--io_spacing);\n      color: var(--io_colorField);\n      background-color: var(--io_bgColor);\n    }\n    :host > io-boolean {\n      padding-left: 0;\n      padding-right: 0;\n      align-self: stretch;\n    }\n    :host > io-boolean:before {\n      display: inline-block;\n      width: 0.75em;\n      content: \"▸\"\n    }\n    :host > io-boolean[value]:before {\n      content: \"▾\";\n    }\n    `;\n  }\n\n  @Property({})\n  declare value: Record<string, any> | any[];\n\n  @Property({type: Array})\n  declare properties: string[];\n\n  @Property({type: Object})\n  declare config: Record<string, any>;\n\n  @Property({type: Array})\n  declare widget: VDOMArray;\n\n  @Property(true)\n  declare labeled: boolean;\n\n  @Property('')\n  declare label: string;\n\n  @Property({value: false, reflect: true})\n  declare expanded: boolean;\n\n  @Property('region')\n  declare role: string;\n\n  changed() {\n    const label = this.label || this.value.constructor.name;\n    const elements: VDOMArray[] = [];\n    elements.push(['io-boolean', {\n      appearance: 'neutral',\n      true: label,\n      false: label,\n      value: this.bind('expanded')}\n    ]);\n    if (this.expanded) {\n      elements.push(['io-properties', {\n        value: this.value,\n        properties: this.properties,\n        config: this.config,\n        labeled: this.labeled,\n        widget: this.widget,\n      }]);\n    }\n    this.template(elements);\n    this.setAttribute('aria-expanded', String(this.expanded));\n  }\n}\n"]}