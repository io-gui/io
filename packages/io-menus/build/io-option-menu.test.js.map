{"version":3,"file":"io-option-menu.test.js","sourceRoot":"","sources":["../src/io-option-menu.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAGnD,MAAM,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;AACnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAiC,CAAC,CAAC;AAC7D,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAE/B,MAAM,CAAC,OAAO;IACZ,YAAY;IACZ,+BAA+B;IAC/B,wBAAwB;IACxB,2BAA2B;IAC3B,8BAA8B;IAC9B,IAAI;IACJ,GAAG;QACD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;YAC5B,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;gBAC9B,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;oBAC5B,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;oBAC1C,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACnC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;gBACzB,EAAE,CAAC,gBAAgB,EAAE,GAAG,EAAE;oBACxB,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACzC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;oBAClB,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC1C,0BAA0B;oBAC1B,0DAA0D;oBAC1D,cAAc;oBACd,mBAAmB;oBACnB,MAAM;oBACN,iDAAiD;oBACjD,sBAAsB;oBACtB,+CAA+C;oBAC/C,uCAAuC;oBACvC,+CAA+C;oBAC/C,gBAAgB;gBAClB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;gBAC1B,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;oBAChC,0DAA0D;gBAC5D,CAAC,CAAC,CAAC;gBACH,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;oBAC7B,2DAA2D;oBAC3D,qEAAqE;oBACrE,mEAAmE;oBACnE,2BAA2B;oBAC3B,kEAAkE;oBAClE,gBAAgB;gBAClB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { IoOptionMenu } from './io-option-menu.js';\nimport { MenuOptions } from './models/menu-options.js';\n\nconst element = new IoOptionMenu();\ndocument.body.appendChild(element as unknown as HTMLElement);\nelement.style.display = 'none';\n\nexport default class {\n  // reset() {\n  //   element.value = undefined;\n  //   element.label = '';\n  //   element.options  = [];\n  //   element.expanded = false;\n  // }\n  run() {\n    describe('IoOptionMenu', () => {\n      describe('default values', () => {\n        it('has default values', () => {\n          expect(element.value).to.equal(undefined);\n          expect(element.label).to.equal('');\n          expect(JSON.stringify(element.options)).to.equal(JSON.stringify([]));\n        });\n      });\n      describe('innerText', () => {\n        it('matches values', () => {\n          expect(element.textContent).to.equal('');\n          element.value = 2;\n          expect(element.textContent).to.equal('2');\n          // element.setProperties({\n          //   options: new MenuOptions([{value: 1, label: 'one'}]),\n          //   value: 1,\n          //   label: 'label'\n          // });\n          // expect(element.textContent).to.equal('label');\n          // element.label = '';\n          // expect(element.textContent).to.equal('one');\n          // element.options = new MenuOptions();\n          // expect(element.textContent).to.equal('1 â–¾');\n          // this.reset();\n        });\n      });\n      describe('attributes', () => {\n        it('has tabindex attribute', () => {\n          // expect(element.getAttribute('tabindex')).to.equal('0');\n        });\n        it('has a11y attributes', () => {\n          // expect(element.getAttribute('role')).to.equal('button');\n          // expect(element.getAttribute('aria-haspopup')).to.equal('listbox');\n          // expect(element.getAttribute('aria-expanded')).to.equal('false');\n          // element.expanded = true;\n          // expect(element.getAttribute('aria-expanded')).to.equal('true');\n          // this.reset();\n        });\n      });\n    });\n  }\n}\n"]}