{"version":3,"file":"io-option-menu.js","sourceRoot":"","sources":["../src/io-option-menu.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAU,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAC/D,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,mBAAmB,CAAC;AAE3B,MAAM,YAAY,GAAG,IAAI,WAAW,EAAE,CAAC;AACvC,qCAAqC;AAErC;;;;;;;;;;;;;;;;;;;;;IAqBI;AAEG,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,SAAS;IACzC,MAAM,KAAK,KAAK;QACd,OAAO,SAAS,CAAA;;;;;;;;;;;;;;;;;;;;;KAqBf,CAAC;IACJ,CAAC;IAWO,KAAK,CAAuB;IAEpC,cAAc,CAAC,KAAkB;QAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;YACxD,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC3E,CAAC;QACD,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACrE,CAAC;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,YAAY;YAAE,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;IACjD,CAAC;IACD,OAAO;QACL,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,EAAE,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;QAElC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;CACF,CAAA;AAlCS;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;2CACzB;AAGX;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;6CACrC;AAGrB;IADP,QAAQ,CAAC,QAAQ,CAAC;0CACE;AAjCV,YAAY;IADxB,QAAQ;GACI,YAAY,CA6DxB","sourcesContent":["import { Register, IoElement, Change, Property } from 'io-gui';\nimport { MenuItem } from './models/menu-item.js';\nimport { MenuOptions } from './models/menu-options.js';\nimport './io-menu-item.js';\n\nconst dummyOptions = new MenuOptions();\n// TODO: fix tab-out without collapse\n\n/**\n * Option select element. Similar to `IoMenuItem`, except it is displayed as a button and uses `options` property instead of ~~`option.options`~~  and it is `selectable` by default. It displays selected `value` or `label` followed by the `â–¾` character.\n *\n * <io-element-demo element=\"io-option-menu\" properties='{\n *   \"label\": \"\",\n *   \"value\": 0,\n *   \"options\": [1,2,3]}\n * ' config='{\"type:object\": [\"io-properties\"]}'></io-element-demo>\n *\n * <io-element-demo element=\"io-option-menu\" properties='{\n *   \"label\": \"\",\n *   \"value\": 0,\n *   \"options\": [\n *     {\"value\": 0, \"label\": \"zero\"},\n *     {\"value\": 1, \"label\": \"one\"},\n *     {\"value\": 2, \"label\": \"two\"},\n *     {\"value\": 3, \"label\": \"three\"}\n *   ]\n * }' config='{\"type:object\": [\"io-properties\"]}'></io-element-demo>\n *\n * When clicked or activated by space/enter key, it expands a menu with selectable options.\n **/\n@Register\nexport class IoOptionMenu extends IoElement {\n  static get Style() {\n    return /* css */`\n    :host {\n      display: inline-block;\n      text-align: center;\n      border-radius: var(--io_borderRadius);\n      border: var(--io_border);\n      border-color: var(--io_borderColorOutset);\n      background-color: var(--io_bgColorDimmed);\n      background-image: var(--io_gradientOutset);\n      /* padding-left: calc(2 * var(--io_spacing)); */\n      /* padding-right: calc(2 * var(--io_spacing)); */\n      text-align: left;\n    }\n    :host > io-menu-item {\n      margin: calc(-1 * var(--io_borderWidth));\n      background-color: transparent !important;\n      border-color: transparent !important;\n    }\n    :host > io-menu-item[selected] {\n      color: var(--io_colorStrong);\n    }\n    `;\n  }\n\n  @Property({value: undefined, reflect: true})\n  declare value: any;\n\n  @Property({value: dummyOptions, type: MenuOptions, reflect: true})\n  declare options: MenuOptions;\n\n  @Property('button')\n  declare role: string;\n\n  private _item: MenuItem | undefined;\n\n  _onLeafChanged(event: CustomEvent) {\n    this.inputValue(event.detail.value);\n  }\n\n  optionsChanged(change: Change) {\n    if (change.oldValue && change.oldValue !== dummyOptions) {\n      change.oldValue.removeEventListener('last-changed', this._onLeafChanged);\n    }\n    if (change.value) {\n      change.value.addEventListener('last-changed', this._onLeafChanged);\n    }\n    const selectedItem = this.options.getItem(this.value);\n    if (selectedItem) selectedItem.selected = true;\n  }\n  changed() {\n    const selectedItem = this.options.getItem(this.value);\n\n    this._item = this._item || new MenuItem({});\n    this._item.label = selectedItem?.label || String(this.value);\n    this._item.options = this.options;\n    this._item.icon = this.icon || '';\n\n    this.template([['io-menu-item', {item: this._item, direction: 'down'}]]);\n  }\n}\n"]}