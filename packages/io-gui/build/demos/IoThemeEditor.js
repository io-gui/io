import{Register as o,IoElement as r,ThemeSingleton as e}from"io-gui";import{ioOptionSelect as l,MenuOption as i}from"io-menus";import{ioButton as n,ioField as d}from"io-inputs";import{ioNumberSlider as t}from"io-sliders";import{ioColorRgba as a}from"io-colors";class IoThemeEditor extends r{static get Style(){return"\n    :host {\n      align-self: start;\n      display: grid;\n      grid-gap: var(--io_spacing);\n      padding: var(--io_spacing3);\n      grid-template-columns: auto 2fr !important;\n    }\n    "}constructor(o){super(o),this.render([l({value:e.bind("themeID"),option:new i({options:[{id:"Light Theme",value:"light"},{id:"Dark Theme",value:"dark"}]})}),n({label:"Reset",action:()=>e.reset()}),d("spacing"),t({value:e.bind("spacing"),min:0,max:20,step:1}),d("lineHeight"),t({value:e.bind("lineHeight"),min:e.bind("fontSize"),max:50,step:1}),d("fontSize"),t({value:e.bind("fontSize"),min:5,max:20,step:1}),d("borderRadius"),t({value:e.bind("borderRadius"),min:0,max:20,step:1}),d("borderWidth"),t({value:e.bind("borderWidth"),min:0,max:5,step:1}),d("borderColor"),a({value:e.bind("borderColor")}),d("borderColorLight"),a({value:e.bind("borderColorLight")}),d("borderColorStrong"),a({value:e.bind("borderColorStrong")}),d("borderColorRed"),a({value:e.bind("borderColorRed")}),d("borderColorBlue"),a({value:e.bind("borderColorBlue")}),d("borderColorGreen"),a({value:e.bind("borderColorGreen")}),d("bgColor"),a({value:e.bind("bgColor")}),d("bgColorStrong"),a({value:e.bind("bgColorStrong")}),d("bgColorLight"),a({value:e.bind("bgColorLight")}),d("bgColorRed"),a({value:e.bind("bgColorRed")}),d("bgColorGreen"),a({value:e.bind("bgColorGreen")}),d("bgColorBlue"),a({value:e.bind("bgColorBlue")}),d("bgColorInput"),a({value:e.bind("bgColorInput")}),d("color"),a({value:e.bind("color")}),d("colorStrong"),a({value:e.bind("colorStrong")}),d("colorLight"),a({value:e.bind("colorLight")}),d("colorRed"),a({value:e.bind("colorRed")}),d("colorGreen"),a({value:e.bind("colorGreen")}),d("colorBlue"),a({value:e.bind("colorBlue")}),d("colorWhite"),a({value:e.bind("colorWhite")}),d("colorInput"),a({value:e.bind("colorInput")}),d("gradientColorStart"),a({value:e.bind("gradientColorStart")}),d("gradientColorEnd"),a({value:e.bind("gradientColorEnd")}),d("shadowColor"),a({value:e.bind("shadowColor")})])}}o(IoThemeEditor);const b=IoThemeEditor.vConstructor;export{IoThemeEditor,b as ioThemeEditor};
