{"version":3,"file":"icon.js","sourceRoot":"","sources":["../../src/elements/icon.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAEtD;;;IAGI;AAEG,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,SAAS;IACnC,MAAM,KAAK,KAAK;QACd,OAAO,SAAS,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2Bf,CAAC;IACJ,CAAC;IAOD,WAAW;QACT,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAC;IACH,CAAC;CACF,CAAA;AAZS;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;oCAC9B;AAGb;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;sCAC/B;AAnCb,MAAM;IADlB,QAAQ;GACI,MAAM,CA4ClB","sourcesContent":["import { Register } from '../core/decorators/register';\nimport { Property } from '../core/decorators/property';\nimport { IoElement } from '../core/element';\nimport { IoIconsetSingleton } from '../nodes/iconset';\n\n/**\n * SVG icon element.\n * It displays SVG content specified via `icon` parameter. Custom SVG assets need to be registered with `IoIconsetSingleton`.\n **/\n@Register\nexport class IoIcon extends IoElement {\n  static get Style() {\n    return /* css */`\n      --ioIcon: {\n        display: inline-block;\n        width: var(--io_lineHeight);\n        height: var(--io_lineHeight);\n        min-width: var(--io_lineHeight);\n        line-height: var(--io_lineHeight);\n        font-size: var(--io_fontSize);\n        text-align: center;\n        fill: var(--io_color);\n      }\n      :host {\n        @apply --ioIcon;\n      }\n      :host:not([icon]) {\n        display: none;\n      }\n      :host[stroke] {\n        stroke: var(--io_colorStrong);\n        stroke-width: var(--io_borderWidth);\n      }\n      :host > svg {\n        height: 100%;\n      }\n      :host > svg > g {\n        transform-origin: 0px 0px;\n      }\n    `;\n  }\n  @Property({value: '', type: String, reflect: true})\n  declare icon: string;\n\n  @Property({value: false, type: Boolean, reflect: true})\n  declare stroke: boolean;\n\n  iconChanged() {\n    if (this.icon.search(':') !== -1) {\n      this.innerHTML = IoIconsetSingleton.getIcon(this.icon);\n    } else {\n      this.textNode = this.icon;\n    }\n  }\n}\n"]}