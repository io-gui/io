{"version":3,"file":"icon.test.js","sourceRoot":"","sources":["../../src/elements/icon.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { IoIcon, IoIconsetSingleton } from '../index';;\n\nconst element = new IoIcon();\nelement.style.display = 'none';\ndocument.body.appendChild(element as unknown as HTMLElement);\n\nexport default class {\n  run() {\n    describe('IoIcon', () => {\n      describe('Initialization', () => {\n        it('Should initialize property definitions correctly', () => {\n          expect(element.icon).to.equal('');\n          expect(element.stroke).to.equal(false);\n          expect(element._properties.get('icon')).to.eql({\n            binding: undefined,\n            init: undefined,\n            reflect: true,\n            type: String,\n            value: '',\n          });\n          expect(element._properties.get('stroke')).to.eql({\n            binding: undefined,\n            init: undefined,\n            reflect: true,\n            type: Boolean,\n            value: false,\n          });\n        });\n        it('has correct default attributes', () => {\n          expect(element.getAttribute('icon')).to.equal(null);\n          expect(element.getAttribute('stroke')).to.equal(null);\n        });\n        it('has correct default innerHTML', () => {\n          expect(element.innerHTML).to.equal('');\n        });\n      });\n      describe('Reactivity', () => {\n        it('should set innerHTML to match icon property', () => {\n          element.icon = 'icon:check';\n          expect(element.innerHTML).to.equal(IoIconsetSingleton.getIcon('icon:check'));\n          element.icon = 'iconcheck';\n          expect(element.innerHTML).to.equal('iconcheck');\n          element.icon = '';\n        });\n        it('has reactive attributes', () => {\n          element.icon = 'text';\n          expect(element.getAttribute('icon')).to.equal('text');\n          element.icon = '';\n          element.stroke = true;\n          expect(element.getAttribute('stroke')).to.equal('');\n          element.stroke = false;\n        });\n      });\n    });\n  }\n}\n"]}