{"version":3,"file":"storage.test.js","sourceRoot":"","sources":["../../src/nodes/storage.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { IoStorageNode, IoStorage, Binding } from '../index';;\n\nasync function afterHashChange(): Promise<void> {\n  return new Promise((resolve) => {\n    self.addEventListener('hashchange', () => {\n      resolve();\n    }, { once: true });\n  });\n}\n\nlocalStorage.removeItem('IoStorage:test2');\nlocalStorage.removeItem('IoStorage:test3');\nlocalStorage.removeItem('IoStorage:test4');\nlocalStorage.removeItem('IoStorage:test5');\n\nconst permited = localStorage.getItem('IoStorage:user-permitted');\n\nlocalStorage.setItem('IoStorage:user-permitted', 'true');\n\nexport default class {\n  run() {\n    describe('IoStorageNode', () => {\n      describe('Initialization', () => {\n        it('Should register property definitions correctly', () => {\n          const node = new IoStorageNode({key: 'test', value: 'foo'});\n          expect(node.key).to.be.equal('test');\n          expect(node.value).to.be.equal('foo');\n          expect(node.default).to.be.equal('foo');\n          expect(node.storage).to.be.equal('none');\n\n          expect(node._properties.get('key')).to.eql({\n            binding: undefined,\n            reflect: false,\n            init: undefined,\n            type: String,\n            value: 'test',\n          });\n\n          expect(node._properties.get('value')).to.eql({\n            binding: undefined,\n            reflect: false,\n            init: undefined,\n            type: undefined,\n            value: 'foo',\n          });\n\n          expect(node._properties.get('default')).to.eql({\n            binding: undefined,\n            reflect: false,\n            init: undefined,\n            type: undefined,\n            value: 'foo',\n          });\n\n          expect(node._properties.get('storage')).to.eql({\n            binding: undefined,\n            reflect: false,\n            init: undefined,\n            type: String,\n            value: 'none',\n          });\n          node.dispose();\n        });\n        it('Should initialize property value from localStorage store if exists', () => {\n          localStorage.setItem('IoStorage:test2', '\"asd\"');\n          const node = new IoStorageNode({key: 'test2', value: 'buzz', storage: 'local'});\n          expect(node.key).to.be.equal('test2');\n          expect(node.value).to.be.equal('asd');\n          expect(node.default).to.be.equal('buzz');\n          expect(node.storage).to.be.equal('local');\n          node.dispose();\n        });\n        it('Should initialize property value from location.hash store if exists', async () => {\n          self.location.hash = self.location.hash + '&testhash=foo';\n          const node = new IoStorageNode({key: 'testhash', value: 'buzz', storage: 'hash'});\n          expect(node.key).to.be.equal('testhash');\n          expect(node.value).to.be.equal('foo');\n          expect(node.default).to.be.equal('buzz');\n          expect(node.storage).to.be.equal('hash');\n          node.dispose();\n        });\n        it('Should return a new instance only if key and store are unique', () => {\n          const node1 = new IoStorageNode({key: 'test3', storage: 'local'});\n          const node2 = new IoStorageNode({key: 'test3', storage: 'local'});\n          const node3 = new IoStorageNode({key: 'test3', storage: 'hash'});\n          const node4 = new IoStorageNode({key: 'test4', storage: 'local'});\n          expect(node1).to.be.equal(node2);\n          expect(node1).to.not.be.equal(node3);\n          expect(node1).to.not.be.equal(node4);\n          node1.dispose();\n          node3.dispose();\n          node4.dispose();\n        });\n      });\n      describe('Reactivity', () => {\n        it('Should update localStorage store when value changes', () => {\n          const node = new IoStorageNode({key: 'test5', value: 'one', storage: 'local'});\n          expect(localStorage.getItem('IoStorage:test5')).to.be.equal(null);\n          node.value = 'two';\n          expect(localStorage.getItem('IoStorage:test5')).to.be.equal('\"two\"');\n          node.value = '2';\n          expect(localStorage.getItem('IoStorage:test5')).to.be.equal('\"2\"');\n          node.value = 2;\n          expect(localStorage.getItem('IoStorage:test5')).to.be.equal('2');\n          node.value = 'one';\n          expect(localStorage.getItem('IoStorage:test5')).to.be.equal(null);\n          node.dispose();\n        });\n        it('Should update location.hash store when value changes to non-default', async () => {\n          const node = new IoStorageNode({key: 'test6', value: 'one', storage: 'hash'});\n          node.value = 'two';\n          expect(self.location.hash).to.include('test6=two');\n          node.value = '2';\n          expect(self.location.hash).to.include('test6=%222%22');\n          node.value = true;\n          expect(self.location.hash).to.include('test6=true');\n          node.value = 2;\n          expect(self.location.hash).to.include('test6=2');\n          self.location.hash = self.location.hash.replace('test6=2', 'test6=3');\n\n          await afterHashChange();\n\n          expect(node.value).to.be.equal(3);\n\n          self.location.hash = self.location.hash.replace('test6=3', 'test6=\"3\"');\n\n          await afterHashChange();\n\n          expect(node.value).to.be.equal('3');\n\n          self.location.hash = self.location.hash.replace('test6=%223%22', 'test6=false');\n\n          await afterHashChange();\n\n          expect(node.value).to.be.equal(false);\n\n          node.value = [0,1,2];\n          expect(self.location.hash).to.include('test6=[0,1,2]');\n          node.value = [0,1,'2'];\n          expect(self.location.hash).to.include('test6=[0,1,%222%22]');\n          node.value = '2';\n          expect(self.location.hash).to.include('test6=%222%22');\n\n          node.dispose();\n\n          if (!permited || permited === 'false') localStorage.setItem('IoStorage:user-permitted', 'false');\n        });\n      });\n    });\n    describe('IoStorage', () => {\n      describe('Initialization', () => {\n        it('Should return binding to IoStorageNode Node', () => {\n          const storage = IoStorage({key: 'test', storage: 'hash'});\n          storage.value = 'foo';\n          expect(storage).to.be.instanceOf(Binding);\n          storage.dispose();\n          expect(self.location.hash).to.not.include('test=foo');\n        });\n      });\n    });\n  }\n}\n"]}