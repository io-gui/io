{"version":3,"file":"storage.js","sourceRoot":"","sources":["../../src/nodes/storage.ts"],"names":[],"mappings":"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","sourcesContent":["import { Binding } from '../core/internals/binding';\nimport { Property } from '../core/decorators/property';\nimport { Register } from '../core/decorators/register';\nimport { IoNode } from '../core/node';\n\nclass EmulatedLocalStorage {\n  declare store: Map<string, unknown>;\n  declare warned: boolean;\n  constructor() {\n    Object.defineProperty(this, 'store', {value: new Map()});\n    Object.defineProperty(this, 'warned', {value: false, writable: true});\n  }\n  get permitted(): boolean {\n    try {\n      return self.localStorage.getItem('IoStorage:user-permitted') === 'true';\n    } catch (error) {\n      console.warn('IoStorage: Cannot access localStorage. Check browser privacy settings!');\n    }\n    return false;\n  }\n  set permitted(permitted: boolean) {\n    try {\n      if (permitted) {\n        console.log('IoStorage: localStorage permission granted.');\n        this.store.set('IoStorage:user-permitted', String(permitted));\n        this.store.forEach((value: unknown, key: string) => {\n          self.localStorage.setItem(key, String(value));\n          this.store.delete(key);\n        });\n      } else {\n        console.log('IoStorage: localStorage permission revoked.');\n        self.localStorage.setItem('IoStorage:user-permitted', String(permitted));\n        new Map(Object.entries(self.localStorage)).forEach((value: unknown, key: string) => {\n          this.store.set(key, value);\n        });\n        self.localStorage.clear();\n      }\n    } catch (error) {\n      console.warn('IoStorage: Cannot access localStorage. Check browser privacy settings!');\n    }\n  }\n  setItem(key: string, value: unknown) {\n    const strValue = typeof value === 'object' ? JSON.stringify(value) : String(value);\n    if (key === 'IoStorage:user-permitted') {\n      this.permitted = value === 'true';\n      return;\n    }\n    if (this.permitted) {\n      self.localStorage.setItem(key, strValue);\n    } else {\n      this.store.set(key, strValue);\n      if (!this.warned && !this.permitted) {\n        console.warn('IoStorage: localStorage permission not set.');\n        this.warned = true;\n      }\n    }\n  }\n  getItem(key: string): string | null {\n    if (this.permitted) {\n      return self.localStorage.getItem(key);\n    } else if (this.store.has(key)) {\n      return this.store.get(key) as string;\n    }\n    return null;\n  }\n  removeItem(key: string) {\n    if (this.permitted) {\n      return self.localStorage.removeItem(key);\n    } else {\n      this.store.delete(key);\n    }\n  }\n  clear() {\n    if (this.permitted) {\n      return self.localStorage.clear();\n    } else {\n      this.store.clear();\n    }\n  }\n}\n\nconst localStorage = new EmulatedLocalStorage();\n\ntype StorageNodes = {\n  local: Map<string, IoStorageNode>,\n  hash: Map<string, IoStorageNode>,\n  none: Map<string, IoStorageNode>\n}\n\nconst nodes: StorageNodes = {\n  local: new Map(),\n  hash: new Map(),\n  none: new Map(),\n};\n\nlet hashValues: Record<string, any> = {};\n\ninterface StorageProps {\n  key: string,\n  value?: any,\n  default?: any,\n  storage?: 'hash' | 'local' | 'none',\n}\n\nexport function genObjectStorageID(object: Record<string, any>) {\n  const string = JSON.stringify(object);\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = Math.imul(31, hash) + string.charCodeAt(i) | 0;\n  }\n  return 'io-local-state-' + String(hash);\n}\n\n@Register\nexport class IoStorageNode extends IoNode {\n\n  @Property({value: '', type: String})\n  declare key: string;\n\n  @Property({value: undefined})\n  declare value: any;\n\n  @Property({value: undefined})\n  declare default: any;\n\n  @Property({value: 'none', type: String})\n  declare storage: 'hash' | 'local' | 'none';\n\n  declare binding: Binding;\n\n  constructor(props: StorageProps) {\n    debug: {\n      if (typeof props !== 'object') {\n        console.warn('Ivalid IoStorage arguments!');\n      } else {\n        if (typeof props.key !== 'string' || !props.key)\n          console.warn('Ivalid IoStorage key!');\n        if (props.storage && ['hash', 'local', 'none'].indexOf(props.storage) === -1)\n          console.warn('Ivalid IoStorage storage!');\n      }\n    }\n    const s = (props.storage || 'none') as keyof StorageNodes;\n    if (nodes[s].has(props.key)) {\n      return nodes[s].get(props.key) as IoStorageNode;\n    } else {\n      const def = props.default || props.value;\n      switch (props.storage) {\n        case 'hash': {\n          const hash = getValueFromHash(props.key);\n          if (hash !== undefined) {\n            try {\n              props.value = JSON.parse(hash);\n            } catch (error) {\n              props.value = hash;\n            }\n          }\n          break;\n        }\n        case 'local': {\n          const localValue = localStorage.getItem('IoStorage:' + props.key);\n          if (localValue) {\n            props.value = JSON.parse(localValue);\n          }\n          break;\n        }\n      }\n      if (props.value === undefined) {\n        props.value = def;\n      }\n      super(Object.assign({default: def}, props));\n      if (props.key !== '__proto__') {\n        nodes[s].set(props.key, this);\n      }\n\n      this.binding = this.bind('value');\n      this.binding.dispose = () => {\n        this._clearStorage();\n      };\n      return this;\n    }\n  }\n  dispose() {\n    this._clearStorage();\n    super.dispose();\n  }\n  _clearStorage() {\n    switch (this.storage) {\n      case 'hash': {\n        this.removeValueToHash();\n        break;\n      }\n      case 'local': {\n        localStorage.removeItem('IoStorage:' + this.key);\n        break;\n      }\n    }\n    const s = (this.storage) as keyof StorageNodes;\n    nodes[s].delete(this.key);\n  }\n  valueChanged() {\n    switch (this.storage) {\n      case 'hash': {\n        this.saveValueToHash();\n        break;\n      }\n      case 'local': {\n        if (this.value === null || this.value === undefined || this.value === this.default) {\n          localStorage.removeItem('IoStorage:' + this.key);\n        } else {\n          localStorage.setItem('IoStorage:' + this.key, JSON.stringify(this.value));\n        }\n        break;\n      }\n    }\n  }\n  removeValueToHash() {\n    hashValues = parseHash(self.location.hash);\n    delete hashValues[this.key];\n\n    let hashString = '';\n    for (const h in hashValues) {\n      hashString += h + '=' + hashValues[h] + '&';\n    }\n    if (hashString) {\n      hashString = hashString.slice(0, -1);\n      self.location.hash = hashString;\n    } else {\n      history.replaceState('', document.title, self.location.pathname + self.location.search);\n    }\n  }\n  saveValueToHash() {\n    hashValues = parseHash(self.location.hash);\n\n    const value = this.value;\n    if (value !== undefined && value !== '' && value !== this.default) {\n      if (typeof value === 'string') {\n        if (isNaN(value as unknown as number)) {\n          hashValues[this.key] = value;\n        } else {\n          hashValues[this.key] = '\"' + value + '\"';\n        }\n      } else {\n        hashValues[this.key] = JSON.stringify(value);\n      }\n    } else {\n      delete hashValues[this.key];\n    }\n\n    let hashString = '';\n    for (const h in hashValues) {\n      hashString += h + '=' + hashValues[h] + '&';\n    }\n    if (hashString) {\n      hashString = hashString.slice(0, -1);\n      self.location.hash = hashString;\n    } else {\n      history.replaceState('', document.title, self.location.pathname + self.location.search);\n    }\n  }\n}\n\n\nexport const IoStorage = Object.assign(\n  (props: StorageProps) => {\n    const storageNode = new IoStorageNode(props);\n    return storageNode.binding;\n  }, {\n    permit() {\n      localStorage.permitted = true;\n    },\n    unpermit() {\n      localStorage.permitted = false;\n    }\n  }\n);\n\n// TODO: unhack and test\nfunction parseHash(hash: string) {\n  return hash.substring(1).split('&').reduce(function (result: Record<string, string>, item) {\n    const parts = item.split('=');\n    if (parts[0] && parts[1]) {\n      result[parts[0]] = parts[1].replace(/%22/g, '\"').replace(/%20/g, ' ');\n    }\n    return result;\n  }, {});\n}\n\nfunction getValueFromHash(key: string) {\n  hashValues = parseHash(self.location.hash);\n  if (hashValues[key]) {\n    try {\n      return JSON.parse(hashValues[key]);\n    } catch (error) {\n      return hashValues[key];\n    }\n  }\n}\n\nfunction updateAllFromHash() {\n  hashValues = parseHash(self.location.hash);\n  for (const h in hashValues) {\n    if (nodes.hash.has(h)) {\n      const node = nodes.hash.get(h) as IoStorageNode;\n      try {\n        node.value = JSON.parse(hashValues[h]);\n      } catch (error) {\n        node.value = hashValues[h];\n      }\n    }\n  }\n}\n\nself.addEventListener('hashchange', updateAllFromHash, false);\nupdateAllFromHash();\n"]}