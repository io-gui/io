{"version":3,"file":"node.test.js","sourceRoot":"","sources":["../../src/core/node.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Change, Binding, IoNode, Register, PropertyDefinitions, IoElement, ListenerDefinitions, nextQueue } from '../index';;\n\nexport default class {\n  run() {\n    describe('node.test.ts', () => {\n      it('Should have core API functions defined', () => {\n        const node = new IoNode();\n        expect(node.setProperty).to.be.a('function');\n        expect(node.applyProperties).to.be.a('function');\n        expect(node.setProperties).to.be.a('function');\n        expect(node.inputValue).to.be.a('function');\n        expect(node.changed).to.be.a('function');\n        expect(node.queue).to.be.a('function');\n        expect(node.dispatchQueue).to.be.a('function');\n        expect(node.throttle).to.be.a('function');\n        expect(node.debounce).to.be.a('function');\n        expect(node.onPropertyMutated).to.be.a('function');\n        expect(node.bind).to.be.a('function');\n        expect(node.unbind).to.be.a('function');\n        expect(node.addEventListener).to.be.a('function');\n        expect(node.removeEventListener).to.be.a('function');\n        expect(node.dispatchEvent).to.be.a('function');\n        expect(node.dispose).to.be.a('function');\n        node.dispose();\n      });\n      it('Should register property definitions correctly', () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop0: { type: String },\n              prop1: { value: false },\n              prop2: -1,\n              prop3: Number,\n              prop4: Object,\n              prop5: [0, 1, 2],\n              prop6: { value: 'hello', type: String },\n              prop7: { value: true, type: Boolean },\n              prop8: { value: 1, type: Number },\n              prop9: { type: Array, init: [1, 2, 3] },\n              prop10: { type: Array, init: null },\n            };\n          }\n        }\n\n        const node = new TestNode();\n\n        expect(node.prop0).to.be.equal('');\n        expect(node.prop1).to.be.equal(false);\n        expect(node.prop2).to.be.equal(-1);\n        expect(node.prop3).to.be.equal(0);\n        expect(node.prop4).to.be.eql({});\n        expect(node.prop5).to.be.eql([0, 1, 2]);\n        expect(node.prop6).to.be.equal('hello');\n        expect(node.prop7).to.be.equal(true);\n        expect(node.prop8).to.be.equal(1);\n        expect(node.prop9).to.be.eql([1, 2, 3]);\n\n        expect(node._properties.get('prop0')).to.be.eql({\n          value: '',\n          type: String,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop1')).to.be.eql({\n          value: false,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop2')).to.be.eql({\n          value: -1,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop3')).to.be.eql({\n          value: 0,\n          type: Number,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop4')).to.be.eql({\n          value: {},\n          type: Object,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop5')).to.be.eql({\n          value: [0, 1, 2],\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop6')).to.be.eql({\n          value: 'hello',\n          type: String,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop7')).to.be.eql({\n          value: true,\n          type: Boolean,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop8')).to.be.eql({\n          value: 1,\n          type: Number,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(node._properties.get('prop9')).to.be.eql({\n          value: [1, 2, 3],\n          type: Array,\n          binding: undefined,\n          reflect: false,\n          init: [1, 2, 3],\n        });\n        expect(node._properties.get('prop10')).to.be.eql({\n          value: undefined,\n          type: Array,\n          binding: undefined,\n          reflect: false,\n          init: null,\n        });\n        node.dispose();\n      });\n      it('Should aggregate property definitions from protochain', () => {\n        @Register\n        class Object1 extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: {\n                value: 0\n              },\n              prop2: null,\n              prop3: {\n                value: 'test',\n                type: String,\n                reflect: true\n              },\n            };\n          }\n        }\n\n        @Register\n        class Object2 extends Object1 {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: {\n                value: 'asd',\n                init: false,\n              },\n              prop2: {\n                init: true,\n              },\n              prop3: ''\n            };\n          }\n        }\n\n        const node1 = new Object1();\n        const node2 = new Object2();\n\n        const protoProps1 = node1._protochain.properties;\n        const protoProps2 = node2._protochain.properties;\n\n        expect(Array.from(node1._properties.keys())).to.be.eql(['reactivity', 'prop1', 'prop2', 'prop3']);\n        expect(Array.from(node2._properties.keys())).to.be.eql(['reactivity', 'prop1', 'prop2', 'prop3']);\n\n        expect(protoProps1.prop1.value).to.be.equal(0);\n        expect(node1._properties.get('prop1')).to.be.eql({\n          value: 0,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n\n        expect(protoProps2.prop1.value).to.be.eql('asd');\n        expect(node2._properties.get('prop1')).to.be.eql({\n          value: 'asd',\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: false,\n        });\n        expect(node2._properties.get('prop2')).to.be.eql({\n          value: null,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: true,\n        });\n        expect(node2._properties.get('prop3')).to.be.eql({\n          value: '',\n          type: String,\n          binding: undefined,\n          reflect: true,\n          init: undefined,\n        });\n      });\n      it('Should correctly register properties with bindigs', () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): any {\n            return {\n              label: ''\n            };\n          }\n        }\n\n        const binding1 = new Binding(new TestNode({label: 'label1'}), 'label');\n        const binding2 = new Binding(new TestNode({label: 'label2'}), 'label');\n        const binding3 = new Binding(new TestNode({label: 'label3'}), 'label');\n\n        @Register\n        class Object1 extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: binding1,\n            };\n          }\n        }\n\n        @Register\n        class Object2 extends Object1 {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: {\n                binding: binding2\n              },\n              prop3: binding3\n            };\n          }\n        }\n\n        const node1 = new Object1();\n        const node2 = new Object2();\n\n\n        expect(node1._properties.get('prop1')!.binding).to.be.equal(binding1);\n        expect(node2._properties.get('prop1')!.binding).to.be.equal(binding2);\n        expect(node2._properties.get('prop3')!.binding).to.be.equal(binding3);\n\n        expect((binding1).targets[0]).to.be.equal(node1);\n        expect((binding2).targets[0]).to.be.equal(node2);\n        expect((binding3).targets[0]).to.be.equal(node2);\n\n        expect(node1._properties.get('prop1')!.value).to.be.equal('label1');\n        expect(node2._properties.get('prop1')!.value).to.be.equal('label2');\n        expect(node2._properties.get('prop3')!.value).to.be.equal('label3');\n      });\n      it('Should correctly get/set properties', () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: {\n                value: 1\n              },\n            };\n          }\n        }\n\n        const node = new TestNode();\n\n        expect(node._properties.get('prop1')!.value).to.be.equal(1);\n        expect(node.prop1).to.be.equal(1);\n        node.setProperty('prop1', 0);\n        expect(node._properties.get('prop1')!.value).to.be.equal(0);\n        expect(node.prop1).to.be.equal(0);\n      });\n      it('Should correctly get/set bound properties', () => {\n\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              label: '',\n            };\n          }\n        }\n\n        const binding1 = new Binding(new TestNode({label: 'label1'}), 'label');\n        const binding2 = new Binding(new TestNode({label: 'label2'}), 'label');\n\n        @Register\n        class TestNode2 extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: binding1\n            };\n          }\n        }\n\n        const node = new TestNode2();\n\n        expect(node._properties.get('prop1')!.value).to.be.equal('label1');\n        expect(node.prop1).to.be.equal('label1');\n\n        expect(node._properties.get('prop1')!.binding).to.be.equal(binding1);\n        expect((binding1).targets[0]).to.be.equal(node);\n\n        node.setProperty('prop1', binding2);\n        expect(node._properties.get('prop1')!.value).to.be.equal('label2');\n        expect(node.prop1).to.be.equal('label2');\n\n        expect((binding1).targets[0]).to.be.equal(undefined);\n        expect((binding2).targets[0]).to.be.equal(node);\n      });\n      it('Should execute attribute reflection on IoElement', () => {\n        @Register\n        class TestElementReflection extends IoElement {\n          static get Properties(): PropertyDefinitions {\n            return {\n              label: {\n                value: 'label1',\n                reflect: true\n              },\n              label2: 'label2',\n            };\n          }\n        }\n\n        const element = new TestElementReflection();\n        expect(element.getAttribute('label')).to.be.equal('label1');\n        expect(element.getAttribute('label2')).to.be.equal(null);\n        element.label = 'label2';\n        expect(element.getAttribute('label')).to.be.equal('label2');\n        element.setProperty('label', 'label3');\n        expect(element.getAttribute('label')).to.be.equal('label3');\n      });\n      it('Should dipatch \"[propName]-changed\" events correctly', async () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              propChangedEvents: Array,\n              prop: Number,\n            };\n          }\n          static get Listeners(): ListenerDefinitions {\n            return {\n              'prop-changed': 'onPropChanged',\n            };\n          }\n          onPropChanged(event: CustomEvent) {\n            this.propChangedEvents.push(event.detail);\n          }\n        }\n\n        const node = new TestNode();\n        expect(node.propChangedEvents).to.be.eql([]);\n\n        node.addEventListener('prop-changed', (() => {\n          expect('This should not execute').to.be.eql(true);\n        }));\n\n        node.removeEventListener('prop-changed');\n\n        node.addEventListener('prop-changed', (event: CustomEvent) => {\n          const oldValue = event.detail.oldValue;\n          const value = event.detail.value;\n          expect(oldValue).to.be.eql(0);\n          expect(value).to.be.eql(1);\n        });\n\n        node.prop = 1;\n\n        node.removeEventListener('prop-changed');\n\n        node.addEventListener('prop-changed', () => {\n          expect('This is actually not expected to happen!').to.be.equal(true);\n        });\n\n        node.setProperty('prop', 2, true);\n\n        node.removeEventListener('prop-changed');\n\n        expect(node.propChangedEvents).to.be.eql([{\n          oldValue: 0,\n          property: 'prop',\n          value: 1,\n        }]);\n\n        await nextQueue();\n\n        expect(node.propChangedEvents).to.be.eql([{\n          oldValue: 0,\n          property: 'prop',\n          value: 1,\n        },\n        {\n          oldValue: 1,\n          property: 'prop',\n          value: 2,\n        }\n      ]);\n\n        node.setProperty('prop', 3, true);\n        node.prop = 4;\n\n        await nextQueue();\n\n        expect(node.propChangedEvents).to.be.eql([{\n          oldValue: 0,\n          property: 'prop',\n          value: 1,\n        }, {\n          oldValue: 1,\n          property: 'prop',\n          value: 2,\n        }, {\n          oldValue: 2,\n          property: 'prop',\n          value: 4,\n        }]);\n\n        const node2 = new TestNode({\n          prop: new Binding(node, 'prop'),\n        });\n\n        expect(node2.propChangedEvents).to.be.eql([{\n          oldValue: 0,\n          property: 'prop',\n          value: 4,\n        }]);\n\n        const node3 = new TestNode({\n          prop: -1\n        });\n\n        expect(node3.propChangedEvents).to.be.eql([{\n          oldValue: 0,\n          property: 'prop',\n          value: -1,\n        }]);\n\n        node3.propChangedEvents.length = 0;\n        node3.reactivity = 'debounced';\n        node3.prop = 10;\n\n        expect(node3.propChangedEvents).to.be.eql([]);\n\n        await nextQueue();\n\n        expect(node3.propChangedEvents).to.be.eql([{\n          oldValue: -1,\n          property: 'prop',\n          value: 10,\n        }]);\n\n        node3.propChangedEvents.length = 0;\n        node3.reactivity = 'none';\n        node3.prop = 20;\n\n        expect(node3.propChangedEvents).to.be.eql([]);\n\n        await nextQueue();\n\n        expect(node3.propChangedEvents).to.be.eql([]);\n      });\n      it('Should execute throttle/debounce queue in FIFO order', async () => {\n        let order: number[] = [];\n        const node = new IoNode();\n        node.debounce(() => {\n          order.push(1);\n        });\n        node.debounce(() => {\n          order.push(2);\n        });\n        const throttleFuc = () => {\n          order.push(0);\n        };\n        node.throttle(throttleFuc);\n        node.throttle(throttleFuc);\n\n        await nextQueue();\n        expect(order).to.be.eql([0, 1, 2, 0]);\n      });\n      it('Should add/remove \"object-mutated\" event listeners to properties of IoNode type', async () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop: Number,\n            };\n          }\n        }\n\n        const subnode = new TestNode();\n        const node = new TestNode({\n          prop: subnode,\n        });\n\n        expect(subnode._eventDispatcher.addedListeners['object-mutated'][0][0]).to.be.equal(node.onPropertyMutated);\n\n        node.prop = null;\n\n        expect(subnode._eventDispatcher.addedListeners['object-mutated']).to.be.equal(undefined);\n\n        const subnode2 = new TestNode();\n        node.prop = subnode2;\n\n        expect(subnode2._eventDispatcher.addedListeners['object-mutated'][0][0]).to.be.equal(node.onPropertyMutated);\n\n        @Register\n        class TestNode2 extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop: TestNode,\n            };\n          }\n        }\n\n        const node2 = new TestNode2();\n        const subnode3 = node2.prop;\n\n        expect(subnode3._eventDispatcher.addedListeners['object-mutated'][0][0]).to.be.equal(node2.onPropertyMutated);\n\n        node2.dispose();\n\n        expect(subnode3._eventDispatcher.addedListeners['object-mutated']).to.be.equal(undefined);\n\n        const node3 = new TestNode2();\n        const subnode4 = node3.prop;\n\n        node3.prop = null;\n\n        expect(subnode4._eventDispatcher.addedListeners['object-mutated']).to.be.equal(undefined);\n\n        const node4 = new TestNode2();\n        const node5 = new TestNode2();\n        const subnode5 = node4.prop;\n        const subnode6 = node5.prop;\n\n        node4.prop = new Binding(node5, 'prop');\n\n        expect(subnode5._eventDispatcher.addedListeners['object-mutated']).to.be.equal(undefined);\n        expect(subnode6._eventDispatcher.addedListeners['object-mutated'][0][0]).to.be.equal(node5.onPropertyMutated);\n        expect(subnode6._eventDispatcher.addedListeners['object-mutated'][1][0]).to.be.equal(node4.onPropertyMutated);\n\n      });\n      it('Should corectly invoke handler functions on change', async () => {\n        @Register\n        class TestNode extends IoNode {\n          changedCounter = 0;\n          prop1Changes: Change[] = [];\n          prop2Changes: Change[] = [];\n          static get Properties(): any {\n            return {\n              prop1: String,\n              prop2: String,\n            };\n          }\n          changed() {\n            this.changedCounter++;\n          }\n          prop1Changed(change: Change) {\n            this.prop1Changes.push(change);\n          }\n          prop2Changed(change: Change) {\n            this.prop2Changes.push(change);\n          }\n        }\n\n        const node = new TestNode();\n\n        expect(node.changedCounter).to.equal(0);\n        expect(node.prop1Changes).to.be.eql([]);\n        expect(node.prop2Changes).to.be.eql([]);\n\n        node.prop1 = 'one';\n        expect(node.changedCounter).to.equal(1);\n        expect(node.prop1Changes).to.be.eql([{\n          property: 'prop1',\n          oldValue: '',\n          value: 'one',\n        }]);\n        expect(node.prop2Changes).to.be.eql([]);\n        node.prop1Changes.length = 0;\n\n        node.prop1 = 'two';\n        node.prop2 = 'test';\n        expect(node.changedCounter).to.equal(3);\n        expect(node.prop1Changes).to.be.eql([{\n          property: 'prop1',\n          oldValue: 'one',\n          value: 'two',\n        }]);\n        expect(node.prop2Changes).to.be.eql([{\n          property: 'prop2',\n          oldValue: '',\n          value: 'test',\n        }]);\n        node.prop1Changes.length = 0;\n        node.prop2Changes.length = 0;\n\n        node.setProperties({\n          'prop1': 'three',\n          'prop2': '',\n        });\n        expect(node.changedCounter).to.equal(4);\n        expect(node.prop1Changes).to.be.eql([{\n          property: 'prop1',\n          oldValue: 'two',\n          value: 'three',\n        }]);\n        expect(node.prop2Changes).to.be.eql([{\n          property: 'prop2',\n          oldValue: 'test',\n          value: '',\n        }]);\n\n        node.prop1Changes.length = 0;\n        node.prop2Changes.length = 0;\n\n        node.reactivity = 'debounced';\n\n        node.setProperties({\n          'prop1': 'four',\n          'prop2': 'test2',\n        });\n\n        expect(node.prop1Changes).to.be.eql([]);\n        expect(node.prop2Changes).to.be.eql([]);\n\n        await nextQueue();\n\n        expect(node.prop1Changes).to.be.eql([{\n          property: 'prop1',\n          oldValue: 'three',\n          value: 'four',\n        }]);\n        expect(node.prop2Changes).to.be.eql([{\n          property: 'prop2',\n          oldValue: '',\n          value: 'test2',\n        }]);\n\n        node.prop1Changes.length = 0;\n        node.prop2Changes.length = 0;\n\n        node.reactivity = 'none';\n\n        node.setProperties({\n          'prop1': 'five',\n          'prop2': 'test3',\n        });\n\n        await nextQueue();\n\n        expect(node.prop1Changes).to.be.eql([]);\n        expect(node.prop2Changes).to.be.eql([]);\n\n        node.dispose();\n      });\n      it('should invoke property mutation handler functions on mutation event', async () => {\n        @Register\n        class TestSubNode extends IoNode {\n          static get Properties(): any {\n            return {\n              a: {\n                value: 0,\n              },\n            };\n          }\n        }\n\n        @Register\n        class TestNode extends IoNode {\n          changedCounter = 0;\n          obj1MutatedCounter = 0;\n          obj2MutatedCounter = 0;\n          static get Properties(): any {\n            return {\n              obj1: {\n                type: TestSubNode,\n              },\n              obj2: {\n                type: TestSubNode,\n              },\n            };\n          }\n          obj1Mutated() {\n            this.obj1MutatedCounter++;\n          }\n          obj2Mutated() {\n            this.obj2MutatedCounter++;\n          }\n        }\n\n        const node = new TestNode();\n\n        expect(node.changedCounter).to.equal(0);\n        expect(node.obj1MutatedCounter).to.equal(0);\n\n        node.obj1.a = 1;\n\n        await nextQueue();\n\n        expect(node.obj1MutatedCounter).to.equal(1);\n        expect(node.obj2MutatedCounter).to.equal(0);\n\n        node.obj2.a = 1;\n\n        expect(node.obj2MutatedCounter).to.equal(1);\n\n        await nextQueue();\n\n        node.obj1 = new TestNode();\n\n        await nextQueue();\n\n        expect(node.obj1MutatedCounter).to.equal(1);\n\n        node.obj1.obj1 = {a: 1};\n\n        await nextQueue();\n\n        expect(node.obj1MutatedCounter).to.equal(2);\n\n        node.dispose();\n      });\n      it('should correctly bind properties', () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: String,\n              prop2: String,\n            };\n          }\n        }\n\n        const node = new TestNode();\n\n        const binding = node.bind('prop1');\n        expect(binding).to.be.instanceof(Binding);\n        expect(binding.node).to.be.equal(node);\n        expect(binding.property).to.be.equal('prop1');\n\n        const boundNode1 = new TestNode({prop1: binding});\n        const boundNode2 = new TestNode({prop1: binding});\n        boundNode2.prop2 = binding;\n\n        expect(binding.targets[0]).to.be.equal(boundNode1);\n        expect(binding.targets[1]).to.be.equal(boundNode2);\n        expect(binding.targetProperties.get(boundNode1)![0]).to.be.equal('prop1');\n        expect(binding.targetProperties.get(boundNode1)![1]).to.be.equal(undefined);\n        expect(binding.targetProperties.get(boundNode2)![0]).to.be.equal('prop1');\n        expect(binding.targetProperties.get(boundNode2)![1]).to.be.equal('prop2');\n\n        node.prop1 = 'one';\n        expect(boundNode1.prop1).to.be.equal('one');\n        expect(boundNode1.prop2).to.be.equal('');\n        expect(boundNode2.prop1).to.be.equal('one');\n        expect(boundNode2.prop2).to.be.equal('one');\n\n        boundNode1.prop1 = 'two';\n        expect(node.prop1).to.be.equal('two');\n        expect(boundNode2.prop1).to.be.equal('two');\n\n        expect(binding.targets.length).to.be.equal(2);\n\n        boundNode1.dispose();\n        expect(binding.targets.length).to.be.equal(1);\n\n        boundNode2.dispose();\n        expect(binding.targets.length).to.be.equal(0);\n\n        node.dispose();\n      });\n      it('Should correctly set values when setProperties() is used to re-set multiple bindings', async () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: 'subnode1',\n              prop2: 'subnode2',\n              prop3: 'subnode3',\n            };\n          }\n        }\n        const node = new TestNode();\n\n        @Register\n        class TestNodeTarget extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              subnode: TestNode,\n              prop1: 'target1',\n              prop2: 'target2',\n              prop3: 'target3',\n            };\n          }\n          init() {\n            this.changed();\n          }\n          changed() {\n            this.subnode.setProperties({\n              prop1: this.bind('prop1'),\n              prop2: this.bind('prop2'),\n              prop3: this.bind('prop3'),\n            });\n          }\n        }\n\n        const targetNode = new TestNodeTarget();\n\n        expect(targetNode.subnode.prop1).to.be.equal(targetNode.prop1).to.be.equal('target1');\n        expect(targetNode.subnode.prop2).to.be.equal(targetNode.prop2).to.be.equal('target2');\n        expect(targetNode.subnode.prop3).to.be.equal(targetNode.prop3).to.be.equal('target3');\n\n        const sourceNode = new TestNode({\n          prop1: 'source1',\n          prop2: 'source2',\n          prop3: 'source3',\n        });\n\n        targetNode.setProperties({\n          prop1: sourceNode.bind('prop1'),\n          prop2: sourceNode.bind('prop2'),\n          prop3: sourceNode.bind('prop3'),\n        });\n\n        expect(targetNode.subnode.prop1).to.be.equal(sourceNode.prop1).to.be.equal(targetNode.prop1).to.be.equal('source1');\n        expect(targetNode.subnode.prop2).to.be.equal(sourceNode.prop2).to.be.equal(targetNode.prop2).to.be.equal('source2');\n        expect(targetNode.subnode.prop3).to.be.equal(sourceNode.prop3).to.be.equal(targetNode.prop3).to.be.equal('source3');\n\n        sourceNode.prop1 = 'test1';\n        targetNode.prop2 = 'test2';\n        targetNode.subnode.prop3 = 'test3';\n\n        expect(targetNode.subnode.prop1).to.be.equal(sourceNode.prop1).to.be.equal(targetNode.prop1).to.be.equal('test1');\n        expect(targetNode.subnode.prop2).to.be.equal(sourceNode.prop2).to.be.equal(targetNode.prop2).to.be.equal('test2');\n        expect(targetNode.subnode.prop3).to.be.equal(sourceNode.prop3).to.be.equal(targetNode.prop3).to.be.equal('test3');\n\n        targetNode.setProperties({\n          prop1: 'final1',\n          prop2: 'final2',\n          prop3: 'final3',\n        });\n\n        expect(targetNode.subnode.prop1).to.be.equal(sourceNode.prop1).to.be.equal(targetNode.prop1).to.be.equal('final1');\n        expect(targetNode.subnode.prop2).to.be.equal(sourceNode.prop2).to.be.equal(targetNode.prop2).to.be.equal('final2');\n        expect(targetNode.subnode.prop3).to.be.equal(sourceNode.prop3).to.be.equal(targetNode.prop3).to.be.equal('final3');\n      });\n      it('Should add/remove targets and targetProperties when assigned to values', () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: String,\n              prop2: String,\n            };\n          }\n        }\n\n        const srcNode = new TestNode();\n        const binding0 = new Binding(srcNode, 'prop1');\n        const binding1 = new Binding(srcNode, 'prop2');\n\n        const dstNode0 = new TestNode();\n        dstNode0.prop1 = binding0;\n        dstNode0.prop2 = binding1;\n\n        const dstNode1 = new TestNode({prop1: binding0});\n        const dstNode3 = new TestNode({prop1: binding0, prop2: binding0});\n\n        expect(binding0.targets[0]).to.be.equal(dstNode0);\n        expect(binding0.targets[1]).to.be.equal(dstNode1);\n        expect(binding0.targets[2]).to.be.equal(dstNode3);\n\n        expect(binding0.targetProperties.get(dstNode0)).to.be.eql(['prop1']);\n        expect(binding0.targetProperties.get(dstNode1)).to.be.eql(['prop1']);\n        expect(binding0.targetProperties.get(dstNode3)).to.be.eql(['prop1', 'prop2']);\n\n        dstNode0.dispose();\n        dstNode1.unbind('prop1');\n        dstNode3.unbind('prop1');\n\n        expect(binding0.targetProperties.get(dstNode0)).to.be.eql([]);\n        expect(binding0.targetProperties.get(dstNode1)).to.be.eql([]);\n        expect(binding0.targetProperties.get(dstNode3)).to.be.eql(['prop2']);\n\n        dstNode1.prop2 = binding0;\n        dstNode1.prop1 = binding0;\n\n        dstNode3.prop1 = binding0;\n\n        expect(binding0.targetProperties.get(dstNode1)).to.be.eql(['prop2', 'prop1']);\n        expect(binding0.targetProperties.get(dstNode3)).to.be.eql(['prop2', 'prop1']);\n      });\n      it('Should return existing binding or create a new on \"bind()\"', () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: String,\n              prop2: String,\n            };\n          }\n        }\n        const node = new TestNode();\n        const binding0 = node.bind('prop1');\n        expect(binding0).to.be.equal(node._bindings.get('prop1'));\n        expect(binding0).to.be.equal(node.bind('prop1'));\n      });\n      it('Should dispose bindings correctly', () => {\n        @Register\n        class TestNode extends IoNode {\n          static get Properties(): PropertyDefinitions {\n            return {\n              prop1: String,\n              prop2: String,\n            };\n          }\n        }\n        const node1 = new TestNode();\n        const binding0 = node1.bind('prop1');\n        node1.unbind('prop1');\n        expect(node1._bindings.get('prop1')).to.be.equal(undefined);\n        expect(binding0.node).to.be.equal(undefined);\n\n        const node2 = new TestNode();\n        const binding1 = node2.bind('prop1');\n        node2.dispose();\n        expect(node2._bindings).to.be.equal(undefined);\n        expect(binding1.node).to.be.equal(undefined);\n        expect(binding1.property).to.be.equal(undefined);\n        expect(binding1.targets).to.be.equal(undefined);\n        expect(binding1.targetProperties).to.be.equal(undefined);\n      });\n    });\n  }\n}\n"]}