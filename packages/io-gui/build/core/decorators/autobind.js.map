{"version":3,"file":"autobind.js","sourceRoot":"","sources":["../../../src/core/decorators/autobind.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,UAAS,MAAc,EAAE,WAA4B,EAAE,UAA8B;IAC3G,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;IACxC,OAAO;QACL,YAAY,EAAE,IAAI;QAClB,UAAU,EAAE,KAAK;QACjB,GAAG;YACD,IAAI,IAAI,KAAM,MAAmB,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE,CAAC;gBACvG,OAAO,cAAc,CAAC;YACxB,CAAC;YACD,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;gBACvC,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,WAAW;aACnB,CAAC,CAAC;YACH,OAAO,WAAW,CAAC;QACrB,CAAC;QACD,GAAG,CAAC,KAAU;YACZ,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;gBACvC,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,IAAI;gBAChB,KAAK;aACN,CAAC,CAAC;QACL,CAAC;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/**\n * Autobinds a method to the instance.\n * @param {Function} target - The target object.\n * @param {string | symbol} propertyKey - The name of the property.\n * @param {PropertyDescriptor} descriptor - The descriptor of the property.\n * @returns {PropertyDescriptor} The modified descriptor.\n */\nexport const Autobind = function(target: Object, propertyKey: string | symbol, descriptor: PropertyDescriptor) {\n  const originalMethod = descriptor.value;\n  return {\n    configurable: true,\n    enumerable: false,\n    get() {\n      if (this === (target as Function).prototype || Object.prototype.hasOwnProperty.call(this, propertyKey)) {\n        return originalMethod;\n      }\n      const boundMethod = originalMethod.bind(this);\n      Object.defineProperty(this, propertyKey, {\n        configurable: true,\n        writable: true,\n        enumerable: false,\n        value: boundMethod\n      });\n      return boundMethod;\n    },\n    set(value: any) {\n      Object.defineProperty(this, propertyKey, {\n        configurable: true,\n        writable: true,\n        enumerable: true,\n        value\n      });\n    }\n  };\n};"]}