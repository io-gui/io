{"version":3,"file":"property.js","sourceRoot":"","sources":["../../../src/core/decorators/property.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAG7D;;;;GAIG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,UAAS,kBAA2C;IAC1E,OAAO,CAAC,MAAc,EAAE,YAAoB,EAAE,EAAE;QAC9C,MAAM,WAAW,GAAG,MAAM,CAAC,WAA0B,CAAC;QACtD,MAAM,WAAW,GAAG,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC9D,kBAAkB,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACjD,WAAW,CAAC,YAAY,CAAC,GAAG,kBAAkB,CAAC;IACjD,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { PropertyDefinitionLoose } from '../internals/property';\nimport { propertyDecorators } from '../internals/protoChain';\nimport { IoNode, Constructor } from '../node';\n\n/**\n * Allows property definitions using decorator pattern.\n * @param {PropertyDefinitionLoose} propertyDefinition - Property definition.\n * @return {Function} Property decorator function.\n */\nexport const Property = function(propertyDefinition: PropertyDefinitionLoose) {\n  return (target: IoNode, propertyName: string) => {\n    const constructor = target.constructor as Constructor;\n    const _Properties = propertyDecorators.get(constructor) || {};\n    propertyDecorators.set(constructor, _Properties);\n    _Properties[propertyName] = propertyDefinition;\n  };\n};"]}