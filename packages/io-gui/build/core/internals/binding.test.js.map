{"version":3,"file":"binding.test.js","sourceRoot":"","sources":["../../../src/core/internals/binding.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Binding, IoNode, Register, PropertyDefinitions } from '../../index';\n\n@Register\nclass TestIoNode extends IoNode {\n  static get Properties(): PropertyDefinitions {\n    return {\n      reactivity: 'immediate',\n      prop1: 0,\n      prop2: 0,\n    };\n  }\n}\n\nexport default class {\n  run() {\n    describe('binding.test.ts', () => {\n      it('Should initialize with correct default values', () => {\n        const node = new TestIoNode();\n        const binding = new Binding(node, 'prop1');\n        expect(binding.node).to.be.equal(node);\n        expect(binding.property).to.be.equal('prop1');\n        expect(binding.targets instanceof Array).to.be.equal(true);\n        expect(binding.targets.length).to.be.equal(0);\n        expect(binding.targetProperties instanceof WeakMap).to.be.equal(true);\n      });\n      it('Should set source and target properties', () => {\n        const node = new TestIoNode();\n        const binding = new Binding(node, 'prop1');\n        node.prop1 = 1;\n        expect(binding.value).to.be.equal(1);\n        node.prop1 = 2;\n        expect(binding.value).to.be.equal(2);\n        binding.value = 3;\n        expect(node.prop1).to.be.equal(3);\n        const targetNode = new TestIoNode();\n        binding.addTarget(targetNode, 'prop1');\n        expect(targetNode.prop1).to.be.equal(3);\n        targetNode.prop1 = 4;\n        expect(binding.value).to.be.equal(4);\n        node.prop1 = 5;\n        // expect(targetNode.prop1).to.be.equal(5);\n        // expect(binding.value).to.be.equal(5);\n        // binding.value = 6;\n        // expect(node.prop1).to.be.equal(6);\n        // expect(targetNode.prop1).to.be.equal(6);\n      });\n      it('Should add/remove target nodes and properties with `addTarget()` and `removeTarget()`', () => {\n        const srcIoNode = new TestIoNode();\n        const binding0 = new Binding(srcIoNode, 'prop1');\n        const binding1 = new Binding(srcIoNode, 'prop2');\n\n        const dstIoNode0 = new TestIoNode();\n        const dstIoNode1 = new TestIoNode();\n\n        binding0.addTarget(dstIoNode0, 'prop1');\n        binding1.addTarget(dstIoNode0, 'prop2');\n        binding1.addTarget(dstIoNode1, 'prop1');\n        binding1.addTarget(dstIoNode1, 'prop2');\n\n        expect(srcIoNode._eventDispatcher.addedListeners).to.be.eql({\n          'prop1-changed': [[binding0.onSourceChanged]],\n          'prop2-changed': [[binding1.onSourceChanged]]\n        });\n\n        expect(dstIoNode0._eventDispatcher.addedListeners).to.be.eql({\n          'prop1-changed': [[binding0.onTargetChanged]],\n          'prop2-changed': [[binding1.onTargetChanged]]\n        });\n\n        expect(dstIoNode1._eventDispatcher.addedListeners).to.be.eql({\n          'prop1-changed': [[binding1.onTargetChanged]],\n          'prop2-changed': [[binding1.onTargetChanged]]\n        });\n\n        expect(binding0.targets[0]).to.be.equal(dstIoNode0);\n        expect(binding0.targets[1]).to.be.equal(undefined);\n        expect(binding1.targets[0]).to.be.equal(dstIoNode0);\n        expect(binding1.targets[1]).to.be.equal(dstIoNode1);\n        expect(binding1.targets[2]).to.be.equal(undefined);\n\n        expect(dstIoNode0._properties.get('prop1')!.binding).to.be.equal(binding0);\n        expect(dstIoNode0._properties.get('prop2')!.binding).to.be.equal(binding1);\n        expect(dstIoNode1._properties.get('prop1')!.binding).to.be.equal(binding1);\n        expect(dstIoNode1._properties.get('prop2')!.binding).to.be.equal(binding1);\n\n        const binding0target0Props = binding0.getTargetProperties(dstIoNode0);\n        const binding0target1Props = binding0.getTargetProperties(dstIoNode1);\n        expect(binding0target0Props[0]).to.be.equal('prop1');\n        expect(binding0target0Props.length).to.be.equal(1);\n        expect(binding0target1Props.length).to.be.equal(0);\n\n        const binding1target0Props = binding1.getTargetProperties(dstIoNode0);\n        const binding1target1Props = binding1.getTargetProperties(dstIoNode1);\n        expect(binding1target0Props[0]).to.be.equal('prop2');\n        expect(binding1target0Props.length).to.be.equal(1);\n        expect(binding1target1Props[0]).to.be.equal('prop1');\n        expect(binding1target1Props[1]).to.be.equal('prop2');\n        expect(binding1target1Props.length).to.be.equal(2);\n\n        binding1.removeTarget(dstIoNode1, 'prop1');\n        expect(binding1target1Props[0]).to.be.equal('prop2');\n        expect(binding1target1Props.length).to.be.equal(1);\n        expect(dstIoNode1._properties.get('prop1')!.binding).to.be.equal(undefined);\n\n        expect(dstIoNode1._eventDispatcher.addedListeners).to.be.eql({\n          'prop2-changed': [[binding1.onTargetChanged]]\n        });\n\n        binding1.addTarget(dstIoNode1, 'prop1');\n        expect(binding1target1Props.length).to.be.equal(2);\n        expect(dstIoNode1._properties.get('prop1')!.binding).to.be.equal(binding1);\n        binding1.removeTarget(dstIoNode1);\n        expect(binding1target1Props.length).to.be.equal(0);\n        expect(dstIoNode1._properties.get('prop1')!.binding).to.be.equal(undefined);\n        expect(dstIoNode1._properties.get('prop2')!.binding).to.be.equal(undefined);\n\n        expect(dstIoNode1._eventDispatcher.addedListeners).to.be.eql({});\n      });\n      it('Should remove existing binding from target if `addTarget()` causes a binding collision', () => {\n        const srcIoNode1 = new TestIoNode();\n        const binding1 = new Binding(srcIoNode1, 'prop1');\n        const dstIoNode1 = new TestIoNode();\n        binding1.addTarget(dstIoNode1, 'prop1');\n\n        const srcIoNode2 = new TestIoNode();\n        const binding2 = new Binding(srcIoNode2, 'prop1');\n\n        expect(binding1.targets).to.be.include(dstIoNode1);\n        let binding1targetProps = binding1.getTargetProperties(dstIoNode1);\n        expect(binding1targetProps.length).to.be.equal(1);\n        expect(binding1targetProps[0]).to.be.equal('prop1');\n\n        binding2.addTarget(dstIoNode1, 'prop1');\n\n        expect(binding1.targets).to.be.eql([]);\n        binding1targetProps = binding1.getTargetProperties(dstIoNode1);\n        expect(binding1targetProps.length).to.be.equal(0);\n      });\n      it('Should dispose correctly', () => {\n        const node = new TestIoNode();\n        const dstIoNode = new TestIoNode();\n        const binding = new Binding(node, 'prop1');\n        binding.addTarget(dstIoNode, 'prop1');\n\n        expect(node._eventDispatcher.addedListeners).to.be.eql({\n          'prop1-changed': [[binding.onSourceChanged]]\n        });\n\n        expect(dstIoNode._eventDispatcher.addedListeners).to.be.eql({\n          'prop1-changed': [[binding.onTargetChanged]],\n        });\n\n        binding.dispose();\n        expect(binding.node).to.be.equal(undefined);\n        expect(binding.property).to.be.equal(undefined);\n        expect(binding.targets).to.be.equal(undefined);\n        expect(binding.targetProperties).to.be.equal(undefined);\n        expect(dstIoNode._properties.get('prop1')!.binding).to.be.equal(undefined);\n\n        expect(node._eventDispatcher.addedListeners).to.be.eql({});\n\n        expect(dstIoNode._eventDispatcher.addedListeners).to.be.eql({});\n      });\n    });\n  }\n}\n"]}