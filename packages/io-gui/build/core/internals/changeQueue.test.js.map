{"version":3,"file":"changeQueue.test.js","sourceRoot":"","sources":["../../../src/core/internals/changeQueue.test.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,WAAW,EAAU,MAAM,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAGpE,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,MAAM;IAC7B,UAAU,GAAa,EAAE,CAAC;IAC1B,WAAW,GAAa,EAAE,CAAC;IAC3B,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9F,CAAC;IACD,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9F,CAAC;IACD,aAAa,CAAC,SAAiB,EAAE,MAAe;QAC9C,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,SAAS,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7F,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;CACF,CAAA;AAnBK,UAAU;IADf,QAAQ;GACH,UAAU,CAmBf;AAED,MAAM,CAAC,OAAO;IACZ,GAAG;QACD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;YACnC,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;gBACvD,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC9D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;gBAChD,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;gBACzG,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;gBAC7D,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;YACtG,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;gBAC/D,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;gBACnE,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;gBACtH,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;YAChI,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,iFAAiF,EAAE,GAAG,EAAE;gBACzF,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;gBACzG,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC9D,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3D,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;gBAC3D,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACvC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;gBAClC,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC9B,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC1C,WAAW,CAAC,OAAO,EAAE,CAAC;gBACtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAChD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { ChangeQueue, Change, IoNode, Register } from '../../index';\n\n@Register\nclass MockIoNode extends IoNode {\n  eventStack: string[] = [];\n  changeStack: string[] = [];\n  prop1Changed(change: Change) {\n    this.changeStack.push(`prop1Changed ${change.property} ${change.value} ${change.oldValue}`);\n  }\n  prop2Changed(change: Change) {\n    this.changeStack.push(`prop2Changed ${change.property} ${change.value} ${change.oldValue}`);\n  }\n  dispatchEvent(eventName: string, change?: Change) {\n    if (change && change.property) {\n      this.eventStack.push(`${eventName} ${change.property} ${change.value} ${change.oldValue}`);\n    } else {\n      this.eventStack.push(`${eventName}`);\n    }\n  }\n  changed() {\n    this.changeStack.push('changed');\n  }\n}\n\nexport default class {\n  run() {\n    describe('changeQueue.test.ts', () => {\n      it('Should initialize with correct default values', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        expect(changeQueue.node).to.be.equal(node);\n        expect(JSON.stringify(changeQueue.changes)).to.be.equal('[]');\n        expect(changeQueue.changes.length).to.be.equal(0);\n        expect(changeQueue.dispatching).to.be.equal(false);\n      });\n      it('Should keep track of changes correctly', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        changeQueue.queue('prop1', 1, 0);\n        changeQueue.queue('prop1', 2, 1);\n        expect(JSON.stringify(changeQueue.changes)).to.be.equal('[{\"property\":\"prop1\",\"value\":2,\"oldValue\":0}]');\n        changeQueue.dispatch();\n        expect(JSON.stringify(changeQueue.changes)).to.be.equal('[]');\n      });\n      it('Should dispatch change events with correct payloads', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        changeQueue.queue('prop1', 1, 0);\n        changeQueue.queue('prop1', 2, 1);\n        changeQueue.dispatch();\n        expect(JSON.stringify(node.eventStack)).to.be.equal('[\"prop1-changed prop1 2 0\",\"object-mutated\"]');\n      });\n      it('Should invoke handler functions with correct payloads', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        changeQueue.queue('prop1', 1, 0);\n        changeQueue.queue('prop1', 2, 1);\n        changeQueue.dispatch();\n        expect(JSON.stringify(node.changeStack)).to.be.equal('[\"prop1Changed prop1 2 0\",\"changed\"]');\n      });\n      it('Should handle changes in first-in, first-out (FIFO) order', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        changeQueue.queue('prop1', 1, 0);\n        changeQueue.queue('prop1', 3, 1);\n        changeQueue.queue('prop2', 2, 0);\n        changeQueue.dispatch();\n        expect(JSON.stringify(node.changeStack)).to.be.equal('[\"prop1Changed prop1 3 0\",\"prop2Changed prop2 2 0\",\"changed\"]');\n        expect(JSON.stringify(node.eventStack)).to.be.equal('[\"prop1-changed prop1 3 0\",\"prop2-changed prop2 2 0\",\"object-mutated\"]');\n      });\n      it('Setting new value to the same value as oldValue should not trigger change event', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        changeQueue.queue('prop1', 1, 0);\n        expect(JSON.stringify(changeQueue.changes)).to.be.equal('[{\"property\":\"prop1\",\"value\":1,\"oldValue\":0}]');\n        changeQueue.queue('prop1', 0, 1);\n        expect(JSON.stringify(changeQueue.changes)).to.be.equal('[]');\n        changeQueue.dispatch();\n        expect(JSON.stringify(node.changeStack)).to.be.equal('[]');\n        expect(JSON.stringify(node.eventStack)).to.be.equal('[]');\n      });\n      it('Should skip dispatch if value is same as oldValue', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        changeQueue.queue('prop1', 0, 0);\n        changeQueue.dispatch();\n        expect(node.changeStack).to.be.eql([]);\n        expect(node.eventStack).to.be.eql([]);\n      });\n      it('Should dispose correctly', () => {\n        const node = new MockIoNode();\n        const changeQueue = new ChangeQueue(node);\n        changeQueue.dispose();\n        expect(changeQueue.node).to.be.equal(undefined);\n        expect(changeQueue.changes).to.be.equal(undefined);\n      });\n    });\n  }\n}\n"]}