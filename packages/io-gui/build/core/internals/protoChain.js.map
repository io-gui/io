{"version":3,"file":"protoChain.js","sourceRoot":"","sources":["../../../src/core/internals/protoChain.ts"],"names":[],"mappings":"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","sourcesContent":["import { ProtoProperty } from './property';\nimport { ListenerDefinition, hardenListenerDefinition } from './eventDispatcher';\nimport { IoNode, IoNodeConstructor, Constructor, PropertyDefinitions, ListenerDefinitions } from '../node';\n\ntype ProtoConstructors = Array<IoNodeConstructor<any>>;\ntype ProtoHandlers = string[];\ntype ProtoProperties = { [property: string]: ProtoProperty };\ntype ProtoListeners = { [property: string]: ListenerDefinition[] };\n\nexport const propertyDecorators: WeakMap<Constructor, PropertyDefinitions> = new WeakMap();\n\nconst NON_OBSERVED = [String, Number, Boolean, Date, RegExp, Map, Set, WeakMap, WeakSet];\nfunction isNonIoNodeConstructor(constructor: any) {\n  if (typeof constructor !== 'function') return false;\n  let proto = constructor.prototype;\n  while (proto) {\n    if (NON_OBSERVED.includes(constructor)) return false;\n    if (proto.constructor.name === 'IoNodeMixinConstructor') return false;\n    if (proto === Object.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\nfunction isNonIoNodeObject(value: any) {\n  return (typeof value === 'object' && value !== null && !value._isIoNode);\n}\nfunction isIoNodeObjectConstructor(constructor: any) {\n  if (typeof constructor !== 'function') return false;\n  let proto = constructor.prototype;\n  while (proto) {\n    if (proto.constructor.name === 'IoNodeMixinConstructor') return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n  return false;\n}\n\n/**\n * ProtoChain manages class inheritance metadata and configuration.\n *\n * This utility class traverses the prototype chain during class registration to:\n * - Aggregate property configurations\n * - Aggregate event listeners\n * - Aggregate CSS styles strings\n * - Auto-bind event handlers to maintain proper 'this' context\n *\n * This class is internal and instantiated during the `Register()` process.\n */\nexport class ProtoChain {\n  /**\n   * Array of inherited class constructors\n   */\n  constructors: ProtoConstructors = [];\n  /**\n   * Aggregated property definition declared in `static get Properties()`\n   */\n  properties: ProtoProperties = {};\n  /**\n   * Aggregated listener definition declared in `static get Listeners()`\n   */\n  listeners: ProtoListeners = {};\n  /**\n   * Aggregated CSS style definition declared in `static get Style()`\n   */\n  styles: string = '';\n  /**\n   * Array of function names that start with \"on[A-Z]\" or \"_on[A-Z]\" for auto-binding.\n   */\n  handlers: ProtoHandlers = [];\n  /**\n   * Array of property names of mutation-observed object properties.\n   */\n  observedObjectProperties: string[] = [];\n  /**\n   * Array of property names of mutation-observed IoNode properties.\n   */\n  observedIoNodeProperties: string[] = [];\n  /**\n   * Creates an instance of `ProtoChain` for specified class constructor.\n   * @param {IoNodeConstructor<any>} ioNodeConstructor - Owner `IoNode` constructor.\n   */\n  constructor(ioNodeConstructor: IoNodeConstructor<any>) {\n    let proto = ioNodeConstructor.prototype;\n    // Iterate through the prototype chain to aggregate inheritance information.\n    // Terminates at `HTMLElement`, `Object` or `Array`.\n    while (\n      proto\n      && (ioNodeConstructor) !== HTMLElement\n      && (ioNodeConstructor) !== Object\n      && (ioNodeConstructor) !== Array) {\n        this.constructors.push(ioNodeConstructor);\n        this.addHandlers(proto);\n        this.addStyles(ioNodeConstructor.Style);\n        proto = Object.getPrototypeOf(proto);\n        ioNodeConstructor = proto.constructor;\n    }\n\n    // Iterate through the prototype chain in reverse to aggregate inherited properties and listeners.\n    // TODO: warn if property name is not allowed e.g. 'constructor', 'prototype', 'length', 'name',\n    // 'property'. etc.\n    let propHash = '';\n    for (let i = this.constructors.length; i--;) {\n      ioNodeConstructor = this.constructors[i];\n      this.addPropertiesFromDecorators(ioNodeConstructor);\n      propHash = this.addStaticProperties(ioNodeConstructor.Properties, propHash);\n      this.addListeners(ioNodeConstructor.Listeners);\n    }\n\n    this.observedObjectProperties = this.getObservedObjectProperties();\n    this.observedIoNodeProperties = this.getObservedIoNodeProperties();\n    debug: this.validateProperties();\n  }\n  /**\n   * Adds properties defined in decorators to the properties array.\n   * @param {IoNodeConstructor<any>} ioNodeConstructor - Owner `IoNode` constructor.\n   */\n  addPropertiesFromDecorators(ioNodeConstructor: IoNodeConstructor<any>) {\n    const props = propertyDecorators.get(ioNodeConstructor);\n    if (props) for (const name in props) {\n      const hardPropDef = new ProtoProperty(props[name]);\n      if (!this.properties[name]) this.properties[name] = hardPropDef;\n      this.properties[name].assign(hardPropDef);\n    }\n  }\n  /**\n   * Adds static properties from `static get Properties()` to the properties array.\n   * Only process properties if they differ from superclass.\n   * This prevents 'static get Properties()' from overriding subclass properties defined in decorators.\n   * @param {PropertyDefinitions} properties - Properties to add\n   * @param {string} prevHash - Previous properties hash\n   * @returns {string} - Updated properties hash\n   */\n  addStaticProperties(properties: PropertyDefinitions = {}, prevHash = ''): string {\n    const protoProperties: Record<string, ProtoProperty> = {};\n    for (const name in properties) {\n      protoProperties[name] = new ProtoProperty(properties[name]);\n    }\n    /**\n     * Note: JSON.stringify() is used to create a unique fingerprint of the properties object.\n     * this does not provide completely accurate signiture of the binding but it's good enough.\n     */\n    const newHash = JSON.stringify(protoProperties);\n    if (newHash !== prevHash) {\n      for (const name in properties) {\n       if (!this.properties[name]) this.properties[name] = protoProperties[name];\n       else this.properties[name].assign(protoProperties[name]);\n       prevHash = newHash;\n     }\n    }\n    return prevHash;\n  }\n  /**\n   * Merges or appends a listener definitions to the existing listeners array.\n   * @param {ListenerDefinitions} listenerDefs - Listener definitions to add\n   */\n  addListeners(listenerDefs?: ListenerDefinitions) {\n    for (const name in listenerDefs) {\n      if (listenerDefs[name]) {\n        const lsnDef = hardenListenerDefinition(listenerDefs[name]);\n        const listeners = this.listeners[name] = this.listeners[name] || [];\n        const i = listeners.findIndex(def => def[0] === lsnDef[0]);\n        if (i !== -1) {\n          if (listeners[i][1]) listeners[i][1] = Object.assign(listeners[i][1] as ListenerDefinition, lsnDef[1]);\n          else if (lsnDef[1]) listeners[i][1] = lsnDef[1];\n        } else {\n          listeners.push(lsnDef);\n        }\n      }\n    }\n  }\n  /**\n   * Adds a style string to the styles array.\n   * @param {string} style - Style string to add\n   */\n  addStyles(style?: string) {\n    if (style && this.styles.indexOf(style) === -1) {\n      this.styles = style + '\\n' + this.styles;\n    }\n  };\n  /**\n   * Adds function names that start with \"on[A-Z]\" or \"_on[A-Z]\" to the handlers array.\n   * @param {IoNode} proto - Prototype object to search for handlers\n   */\n  addHandlers(proto: IoNode) {\n    const names = Object.getOwnPropertyNames(proto);\n    for (let j = 0; j < names.length; j++) {\n      const fn = names[j];\n      if (/^on[A-Z]/.test(fn) || /^_on[A-Z]/.test(fn) || fn.endsWith('Changed') || fn.endsWith('Mutated')) {\n        const propDesr = Object.getOwnPropertyDescriptor(proto, fn);\n        if (propDesr === undefined || propDesr.get || propDesr.set) continue;\n        if (typeof proto[fn] === 'function') {\n          if (this.handlers.indexOf(fn) === -1) {\n            this.handlers.push(fn);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Creates observedObjectProperties array.\n   * @returns {string[]} - Array of property names that are observed as native objects.\n   */\n  getObservedObjectProperties() {\n    const observedObjectProperties: string[] = [];\n    for (const name in this.properties) {\n      const value = this.properties[name].value;\n      const type = this.properties[name].type;\n      if(isNonIoNodeObject(value) || isNonIoNodeConstructor(type)) {\n        observedObjectProperties.push(name);\n      }\n    }\n    return observedObjectProperties;\n  }\n  /**\n   * Creates observedIoNodeProperties array.\n   * @returns {string[]} - Array of property names that are observed as IoNode objects.\n   */\n  getObservedIoNodeProperties() {\n    const observedIoNodeProperties: string[] = [];\n    for (const name in this.properties) {\n      const value = this.properties[name].value;\n      const type = this.properties[name].type;\n      if(value?._isIoNode || isIoNodeObjectConstructor(type)) {\n        observedIoNodeProperties.push(name);\n      }\n    }\n    return observedIoNodeProperties;\n  }\n  /**\n   * Debug only.\n   * Validates property definitions.\n   * Logs warnings for incorrect property definitions.\n   * @returns {void}\n   */\n  validateProperties() {\n    for (const name in this.properties) {\n      const prop = this.properties[name];\n      if ([String, Number, Boolean].indexOf(prop.type as any) !== -1) {\n        if (prop.type === Boolean && prop.value !== undefined && typeof prop.value !== 'boolean' ||\n            prop.type === Number && prop.value !== undefined && typeof prop.value !== 'number' ||\n            prop.type === String && prop.value !== undefined && typeof prop.value !== 'string') {\n          console.warn(`Property \"${name}\" in ProtoChain: Incorrect value type for ${prop.type} property!`);\n        }\n      } else {\n        const isNull = prop.value === null;\n        const isUndefined = prop.value === undefined;\n        if (typeof prop.type === 'function' && !(prop.value instanceof prop.type) && !isNull && !isUndefined) {\n            console.warn(`Property \"${name}\" in ProtoChain: Incorrect value type for ${prop.type} property!`);\n        }\n      }\n    }\n  }\n  /**\n   * Auto-binds event handler methods (starting with 'on[A-Z]' or '_on[A-Z]') to preserve their 'this' context.\n   * NOTE: Defining handlers as arrow functions will not work because they are not defined before constructor has finished.\n   * @param {IoNode} node - Target node instance\n   */\n  autobindHandlers(node: IoNode) {\n    debug: if (node.constructor !== this.constructors[0]) {\n      console.warn('`autobindHandlers` should be used on', this.constructors[0].name, 'instance');\n    }\n    for (let i = this.handlers.length; i--;) {\n      Object.defineProperty(node, this.handlers[i], {\n        value: node[this.handlers[i]].bind(node),\n        writable: true,\n        configurable: true\n      });\n    }\n  }\n}\n"]}