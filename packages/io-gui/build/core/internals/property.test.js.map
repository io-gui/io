{"version":3,"file":"property.test.js","sourceRoot":"","sources":["../../../src/core/internals/property.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Binding, ProtoProperty, PropertyInstance, Property, IoNode, Register, PropertyDefinitions, propertyDecorators } from '../../index';\n\nclass Object1 {\n  constructor(init?: any) {\n    if (init !== undefined) {\n      this.prop = init;\n    }\n  }\n  prop = true;\n}\n\n@Register\nclass TestIoNode extends IoNode {\n  static get Properties(): PropertyDefinitions {\n    return {\n      label: 'default'\n    };\n  }\n}\n\nconst dummy = new TestIoNode();\n\nexport default class {\n  run() {\n    describe('property.test.ts', () => {\n      it('Should initialize correct property definitions and values from loosely typed property definitions', () => {\n        let propDef, prop;\n        // initialize with empty object as property definition\n        propDef = new ProtoProperty({});\n        prop = new PropertyInstance(dummy, propDef);\n\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: undefined,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with null property definition\n        propDef = new ProtoProperty(null);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: null,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: null,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with undefined property definition\n        propDef = new ProtoProperty(undefined);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: undefined,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with Number property definition\n        propDef = new ProtoProperty(Number);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Number,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 0,\n          type: Number,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with type: Number property definition\n        propDef = new ProtoProperty({type: Number});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Number,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 0,\n          type: Number,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with number property definition\n        propDef = new ProtoProperty(1);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: 1,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 1,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with value: number property definition\n        propDef = new ProtoProperty({value: 2});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: 2,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 2,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with String property definition\n        propDef = new ProtoProperty(String);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: String,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: '',\n          type: String,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with type: String property definition\n        propDef = new ProtoProperty({type: String});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: String,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: '',\n          type: String,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with string property definition\n        propDef = new ProtoProperty('test');\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: 'test',\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 'test',\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with value: string property definition\n        propDef = new ProtoProperty({value: 'test'});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: 'test',\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 'test',\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with Boolean property definition\n        propDef = new ProtoProperty(Boolean);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Boolean,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: false,\n          type: Boolean,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with type: Boolean property definition\n        propDef = new ProtoProperty({type: Boolean});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Boolean,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: false,\n          type: Boolean,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with boolean property definition\n        propDef = new ProtoProperty(true);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: true,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: true,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with value: boolean property definition\n        propDef = new ProtoProperty({value: true});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: true,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: true,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with Object property definition\n        propDef = new ProtoProperty(Object);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: {},\n          type: Object,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with type: Object property definition\n        propDef = new ProtoProperty({type: Object});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: {},\n          type: Object,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with type: Object property definition and init: null\n        propDef = new ProtoProperty({type: Object, init: null});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object,\n          binding: undefined,\n          reflect: undefined,\n          init: null,\n        });\n        expect(prop).to.be.eql({\n          value: undefined,\n          type: Object,\n          binding: undefined,\n          reflect: false,\n          init: null,\n        });\n        // initialize with object: value property definition\n        const object = {prop: true};\n        propDef = new ProtoProperty({value: object});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: {prop: true},\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: {prop: true},\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(propDef.value).to.equal(object);\n        expect(prop.value).to.equal(object);\n        // initialize with Array property definition\n        propDef = new ProtoProperty(Array);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Array,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: [],\n          type: Array,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with type: Array property definition\n        propDef = new ProtoProperty({type: Array});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Array,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: [],\n          type: Array,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with an object property definition with object value property\n        const array = [1, 2, 3];\n        propDef = new ProtoProperty({value: array});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: [1, 2, 3],\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: [1, 2, 3],\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(propDef.value).to.equal(array);\n        expect(prop.value).to.equal(array);\n        // initialize with custom Object1 property definition but without value initialization\n        propDef = new ProtoProperty({type: Object1, init: null});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: undefined,\n          init: null,\n        });\n        expect(prop).to.be.eql({\n          value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: false,\n          init: null,\n        });\n        // initialize with custom Object1 property definition\n        propDef = new ProtoProperty(Object1);\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: new Object1(),\n          type: Object1,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with custom Object1 property definition with initial argument\n        propDef = new ProtoProperty({type: Object1, init: 'test'});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: undefined,\n          init: 'test',\n        });\n        expect(prop).to.be.eql({\n          value: new Object1('test'),\n          type: Object1,\n          binding: undefined,\n          reflect: false,\n          init: 'test',\n        });\n        // initialize with custom Object1 property definition with initial argument being `this` node reference\n        propDef = new ProtoProperty({type: Object1, init: 'this'});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: undefined,\n          init: 'this',\n        });\n        expect(prop).to.be.eql({\n          value: new Object1(dummy),\n          type: Object1,\n          binding: undefined,\n          reflect: false,\n          init: 'this',\n        });\n        // initialize with custom Object1 property definition with initial argument being `this.[propName]` node property reference\n        propDef = new ProtoProperty({type: Object1, init: 'this.label'});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: undefined,\n          init: 'this.label',\n        });\n        expect(prop).to.be.eql({\n          value: new Object1(dummy.label),\n          type: Object1,\n          binding: undefined,\n          reflect: false,\n          init: 'this.label',\n        });\n        // initialize with an object property definition with custom object1 value property\n        const object1 = new Object1();\n        propDef = new ProtoProperty({value: object1});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: object1,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(propDef.value).to.be.equal(object1);\n        expect(prop).to.be.eql({\n          value: object1,\n          type: undefined,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        expect(prop.value).to.be.equal(object1);\n        expect(propDef.value).to.equal(object1);\n        expect(prop.value).to.equal(object1);\n        // initialize with an object property definition with custom Object1 type property\n        propDef = new ProtoProperty({type: Object1});\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: new Object1(),\n          // value: undefined,\n          type: Object1,\n          binding: undefined,\n          reflect: false,\n          init: undefined,\n        });\n        // initialize with non-default property definition\n        propDef = new ProtoProperty({\n          reflect: false,\n          type: Object,\n          init: true,\n        });\n        prop = new PropertyInstance(dummy, propDef);\n        expect(propDef).to.be.eql({\n          value: undefined,\n          type: Object,\n          binding: undefined,\n          reflect: false,\n          init: true,\n        });\n        expect(prop).to.be.eql({\n          value: new Object(true),\n          type: Object,\n          binding: undefined,\n          reflect: false,\n          init: true,\n        });\n      });\n      it('Should register property definitions from decorators.', () => {\n        class TestClass extends IoNode {\n          @Property('value1')\n          declare prop1: string;\n          @Property({value: 'value2', type: String})\n          declare prop2: string;\n        }\n        Register(TestClass);\n        const propertyDefs = propertyDecorators.get(TestClass);\n        expect(propertyDefs).to.be.eql({\n          prop1: 'value1',\n          prop2: {value: 'value2', type: String}\n        });\n      });\n      it('Should initialize properties with binding correctly', () => {\n        let propDef, prop;\n        let binding = new Binding(new TestIoNode({label: 'lorem'}), 'label');\n\n        propDef = new ProtoProperty(binding);\n        prop = new PropertyInstance(dummy, propDef);\n\n        expect(propDef).to.be.eql({\n          value: 'lorem',\n          type: undefined,\n          binding: binding,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 'lorem',\n          type: undefined,\n          binding: binding,\n          reflect: false,\n          init: undefined,\n        });\n\n        binding = new Binding(new TestIoNode({label: 'lorem'}), 'label');\n\n        propDef = new ProtoProperty({binding: binding, value: 'ipsum'});\n        prop = new PropertyInstance(dummy, propDef);\n\n        expect(propDef).to.be.eql({\n          value: 'lorem',\n          type: undefined,\n          binding: binding,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(prop).to.be.eql({\n          value: 'lorem',\n          type: undefined,\n          binding: binding,\n          reflect: false,\n          init: undefined,\n        });\n      });\n      it('Should assign property definitions correctly', () => {\n        const binding = new Binding(new TestIoNode({label: 'lorem'}), 'label');\n        let propDef1 = new ProtoProperty({});\n        let propDef2 = new ProtoProperty({\n          value: 'lorem',\n          type: String,\n          binding: binding,\n          reflect: false,\n          init: undefined,\n        });\n        propDef1.assign(propDef2);\n        expect(propDef1).to.be.eql(propDef2);\n\n        propDef1 = new ProtoProperty({});\n        propDef2 = new ProtoProperty({\n          value: 'lorem',\n          type: String,\n          binding: binding,\n          reflect: true,\n          init: true,\n        });\n        propDef2.assign(propDef1);\n        expect(propDef1).to.be.eql({\n          value: undefined,\n          type: undefined,\n          binding: undefined,\n          reflect: undefined,\n          init: undefined,\n        });\n        expect(propDef2).to.be.eql({\n          value: 'lorem',\n          type: String,\n          binding: binding,\n          reflect: true,\n          init: true,\n        });\n\n        propDef1 = new ProtoProperty({\n          reflect: true,\n          init: undefined,\n        });\n        propDef2 = new ProtoProperty({\n          value: 'lorem',\n          type: String,\n          reflect: true\n        });\n        propDef2.assign(propDef1);\n        expect(propDef2).to.be.eql({\n          value: 'lorem',\n          binding: undefined,\n          type: String,\n          reflect: true,\n          init: undefined\n        });\n      });\n    });\n  }\n}\n"]}