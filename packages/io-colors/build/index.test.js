import{nextQueue as e}from"io-gui";import{IoColorBase as t,IoColorPanelSingleton as o,IoColorPicker as l,IoColorRgba as r,IoColorSlider as c,IoColorSwatch as n}from"./index.js";
/**@License
 * Copyright (c) 2011-2016 Heather Arthur <fayearthur@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */class ColorConvertTest{run(){describe("color.convert.test",(()=>{it("should convert rgb to hsl",(()=>{const e=function(e){const t=e[0]/255,o=e[1]/255,l=e[2]/255,r=Math.min(t,o,l),c=Math.max(t,o,l),n=c-r;let a,s=0;c===r?s=0:t===c?s=(o-l)/n:o===c?s=2+(l-t)/n:l===c&&(s=4+(t-o)/n),s=Math.min(60*s,360),s<0&&(s+=360);const i=(r+c)/2;return a=c===r?0:i<=.5?n/(c+r):n/(2-c-r),[s,100*a,100*i]}([255,0,0]);expect(e).to.eql([0,100,50])})),it("should convert hsl to rgb",(()=>{const e=function(e){const t=e[0]/360,o=e[1]/100,l=e[2]/100;let r,c,n;r=l+o-l*o;const a=2*l-r,s=[0,0,0];for(let e=0;e<3;e++)c=t+1/3*-(e-1),c<0&&c++,c>1&&c--,n=6*c<1?a+6*(r-a)*c:2*c<1?r:3*c<2?a+(r-a)*(2/3-c)*6:a,s[e]=255*n;return s}([0,100,50]);expect(e).to.eql([255,0,0])})),it("should convert rgb to hsv",(()=>{const e=function(e){let t,o,l,r,c=0;const n=e[0]/255,a=e[1]/255,s=e[2]/255,i=Math.max(n,a,s),d=i-Math.min(n,a,s),diffc=function(e){return(i-e)/6/d+.5};return 0===d?(c=0,r=0):(r=d/i,t=diffc(n),o=diffc(a),l=diffc(s),n===i?c=l-o:a===i?c=1/3+t-l:s===i&&(c=2/3+o-t),c<0?c+=1:c>1&&(c-=1)),[360*c,100*r,100*i]}([255,0,0]);expect(e).to.eql([0,100,100])})),it("should convert hsv to rgb",(()=>{const e=function(e){const t=e[0]/60,o=e[1]/100;let l=e[2]/100;const r=Math.floor(t)%6,c=t-Math.floor(t),n=255*l*(1-o),a=255*l*(1-o*c),s=255*l*(1-o*(1-c));switch(l*=255,r){case 0:return[l,s,n];case 1:return[a,l,n];case 2:return[n,l,s];case 3:return[n,a,l];case 4:return[s,n,l];default:return[l,n,a]}}([0,100,100]);expect(e).to.eql([255,0,0])}))}))}}const a=new t;a.style.display="none",document.body.appendChild(a);class ColorBaseTest{run(){describe("IoColorBase.test",(()=>{it("Should have core API functions defined",(()=>{expect(a.rgbFromHsv).to.be.a("function"),expect(a.rgbFromHsl).to.be.a("function"),expect(a.valueFromRgb).to.be.a("function")})),it("Should initialize properties correctly",(()=>{expect(a.reactivity).to.equal("throttled"),expect(a.value).to.deep.equal({r:1,g:1,b:1,a:1}),expect(a.rgba).to.deep.equal([1,1,1,1]),expect(a.hsv).to.deep.equal([1,0,1]),expect(a.hsl).to.deep.equal([1,1,1])})),it("Should convert colors correctly",(()=>{a.hsv=[.5,.5,.5],expect(a.value).to.deep.equal({r:1,g:1,b:1,a:1}),expect(a.rgba).to.deep.equal([1,1,1,1]),expect(a.hsl).to.deep.equal([1,1,1]),a.rgbFromHsv(),expect(a.value).to.deep.equal({r:1,g:1,b:1,a:1}),expect(a.rgba).to.deep.equal([.25,.5,.5,1]),a.valueFromRgb(),expect(a.value).to.deep.equal({r:.25,g:.5,b:.5,a:1})})),it("Should reactively update on value change",(async()=>{a.value={r:.25,g:.75,b:1,a:.5},await e(),expect(a.rgba).to.deep.equal([.25,.75,1,.5]),expect(a.hsv).to.deep.equal([.5555555555555557,.75,1]),expect(a.hsl).to.deep.equal([.5555555555555556,1,.625]),a.value.r=.5,a.dispatchEvent("object-mutated",{object:a.value},!1,window),await e(),expect(a.rgba).to.deep.equal([.5,.75,1,.5]),expect(a.hsv).to.deep.equal([.5833333333333334,.5,1]),expect(a.hsl).to.deep.equal([.5833333333333334,1,.75])}))}))}}const s=o;class ColorPanelTest{run(){describe("IoColorPanelSingleton.test",(()=>{it("Should initialize properties correctly",(()=>{expect(s.expanded).to.equal(!1)})),it("has correct sliders",(async()=>{expect(s.children.length).to.equal(3),expect(s.children[0].localName).to.equal("io-color-slider"),expect(s.children[0].channel).to.equal("sv"),expect(s.children[1].localName).to.equal("io-color-slider"),expect(s.children[1].channel).to.equal("h"),expect(s.children[2].localName).to.equal("io-color-slider"),expect(s.children[2].channel).to.equal("a"),s.value={r:.5,g:.5,b:.5},await e(),expect(s.children[2]).to.equal(void 0)}))}))}}const i=new l;i.style.display="none",document.body.appendChild(i);class ColorPickerTest{run(){describe("IoColorPicker.test",(()=>{}))}}const d=new r;d.style.display="none",document.body.appendChild(d);class ColorRgbaTest{run(){describe("IoColorRgba.test",(()=>{}))}}const u=new c;u.style.display="none",document.body.appendChild(u);class ColorSlidersTest{run(){describe("IoColorSliders.test",(()=>{}))}}const p=new n;p.style.display="none",document.body.appendChild(p);class ColorSwatchTest{run(){describe("IoColorSwatch",(()=>{describe("Initialization",(()=>{})),describe("Reactivity",(()=>{})),describe("Accessibility",(()=>{}))}))}}class index_test{run(){(new ColorConvertTest).run(),(new ColorBaseTest).run(),(new ColorPanelTest).run(),(new ColorPickerTest).run(),(new ColorRgbaTest).run(),(new ColorSlidersTest).run(),(new ColorSwatchTest).run()}}export{index_test as default};
