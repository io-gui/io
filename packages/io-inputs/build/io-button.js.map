{"version":3,"file":"io-button.js","sourceRoot":"","sources":["../src/io-button.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAErD;;;;;IAKI;AAEG,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,OAAO;IACnC,MAAM,KAAK,KAAK;QACd,OAAO,SAAS,CAAA;;;;;;;;;;KAUf,CAAC;IACJ,CAAC;IAiBD,cAAc,CAAC,KAAmB;QAChC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IACD,eAAe,CAAC,KAAmB;QACjC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,YAAY,CAAC,KAAmB;QAC9B,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,UAAU,CAAC,KAAoB;QAC7B,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;YAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC;IACH,CAAC;IACD,QAAQ,CAAC,KAAoB;QAC3B,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,QAAQ;QACN,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,UAAU;YAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IACD,IAAI;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI;YACjD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SACtD,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAlDS;IADP,QAAQ,CAAC,SAAS,CAAC;wCACC;AAGb;IADP,QAAQ,CAAC,SAAS,CAAC;uCACD;AAGX;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;4CACI;AAGrD;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;yCAC9B;AAGjB;IADP,QAAQ,CAAC,QAAQ,CAAC;sCACE;AA5BV,QAAQ;IADpB,QAAQ;GACI,QAAQ,CAkEpB","sourcesContent":["import { Register, Property, IoField } from 'io-gui';\n\n/**\n * Button element.\n * When clicked or activated by space/enter key, it calls the `action` property function with optional `value` argument.\n *\n * <io-element-demo element=\"io-button\" properties='{\"label\": \"Button\", \"action\": \"null\"}'></io-element-demo>\n **/\n@Register\nexport class IoButton extends IoField {\n  static get Style() {\n    return /* css */`\n      :host {\n        text-align: center;\n        padding-left: calc(2 * var(--io_spacing));\n        padding-right: calc(2 * var(--io_spacing));\n        color: var(--io_colorStrong);\n      }\n      :host[pressed] {\n        border-color: var(--io_borderColorInset);\n      }\n    `;\n  }\n\n  @Property(undefined)\n  declare action?: any;\n\n  @Property(undefined)\n  declare value: any;\n\n  @Property({value: 'outset', type: String, reflect: true})\n  declare appearance: 'flush' | 'inset' | 'outset' | 'neutral';\n\n  @Property({value: false, type: Boolean, reflect: true})\n  declare pressed: boolean;\n\n  @Property('button')\n  declare role: string;\n\n  _onPointerdown(event: PointerEvent) {\n    super._onPointerdown(event);\n    this.pressed = true;\n  }\n  _onPointerleave(event: PointerEvent) {\n    super._onPointerleave(event);\n    this.pressed = false;\n  }\n  _onPointerup(event: PointerEvent) {\n    super._onPointerup(event);\n    this.pressed = false;\n  }\n  _onKeydown(event: KeyboardEvent) {\n    super._onKeydown(event);\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.pressed = true;\n    }\n  }\n  _onKeyup(event: KeyboardEvent) {\n    super._onKeyup(event);\n    this.pressed = false;\n  }\n  _onClick() {\n    if (typeof this.action === 'function') this.action(this.value);\n    this.dispatchEvent('io-button-clicked', {value: this.value}, true);\n  }\n  init() {\n    this.changed();\n  }\n  changed() {\n    this.setAttribute('aria-pressed', String(this.pressed));\n    this.template([\n      this.icon ? ['io-icon', {icon: this.icon}] : null,\n      this.label ? ['io-label', {label: this.label}] : null\n    ]);\n  }\n}\n"]}