{"version":3,"file":"io-boolean.test.js","sourceRoot":"","sources":["../src/io-boolean.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { IoIconsetSingleton } from 'io-gui';\nimport { IoBoolean } from './index';\n\nconst element = new IoBoolean();\nelement.style.display = 'none';\ndocument.body.appendChild(element as unknown as HTMLElement);\n\nexport default class {\n  run() {\n    describe('IoBoolean', () => {\n      describe('Initialization', () => {\n        it('Should have core API functions defined', () => {\n          expect(element.toggle).to.be.a('function');\n        });\n        it('Should initialize property definitions correctly', () => {\n          expect(element.value).to.equal(false);\n          expect(element.true).to.equal('true');\n          expect(element.false).to.equal('false');\n          expect(element.role).to.equal('switch');\n          expect(element._properties.get('value')).to.eql({\n            binding: undefined,\n            init: undefined,\n            reflect: true,\n            type: Boolean,\n            value: false,\n          });\n          expect(element._properties.get('true')).to.eql({\n            binding: undefined,\n            init: undefined,\n            reflect: false,\n            type: String,\n            value: 'true',\n          });\n          expect(element._properties.get('false')).to.eql({\n            binding: undefined,\n            init: undefined,\n            reflect: false,\n            type: String,\n            value: 'false',\n          });\n        });\n        it('has correct default attributes', () => {\n          expect(element.getAttribute('role')).to.equal('switch');\n          expect(element.getAttribute('value')).to.equal(null);\n          expect(element.getAttribute('aria-checked')).to.equal('false');\n        });\n        it('has correct default innerHTML', () => {\n          expect(element.innerHTML).to.equal('<io-label label=\"false\" aria-label=\"false\">false</io-label>');\n        });\n      });\n      describe('Reactivity', () => {\n        it('should set innerText to match value property', () => {\n          expect(element.innerText).to.equal(element.false);\n          element.toggle();\n          expect(element.innerText).to.equal(element.true);\n          element.true = 'yes';\n          element.false = 'no';\n          expect(element.innerText).to.equal('yes');\n          element.toggle();\n          expect(element.innerText).to.equal('no');\n          element.value = false;\n          element.true = 'true';\n          element.false = 'false';\n        });\n        it('should set icon to match icon property', () => {\n          element.icon = 'icons:io_logo';\n          expect(element.innerHTML).to.equal(`<io-icon icon=\"${element.icon}\">${IoIconsetSingleton.getIcon(element.icon)}</io-icon><io-label label=\"false\" aria-label=\"false\">${element.false}</io-label>`);\n          element.icon = '';\n          expect(element.innerHTML).to.equal(`<io-label label=\"false\" aria-label=\"false\">${element.false}</io-label>`);\n        });\n        it('should not render innerHTML if no value string is computed', () => {\n          element.true = '';\n          element.false = '';\n          expect(element.innerHTML).to.equal('');\n          element.toggle();\n          expect(element.innerHTML).to.equal('');\n          element.toggle();\n          element.true = 'true';\n          element.false = 'false';\n        });\n        it('has reactive attributes', () => {\n          element.value = false;\n          expect(element.getAttribute('value')).to.equal(null);\n          element.value = true;\n          expect(element.getAttribute('value')).to.equal('');\n          element.value = false;\n        });\n      });\n      describe('Accessibility', () => {\n        it('has a11y attributes', () => {\n          element.value = false;\n          expect(element.getAttribute('aria-checked')).to.equal('false');\n          element.value = true;\n          expect(element.getAttribute('aria-checked')).to.equal('true');\n          element.value = false;\n        });\n      });\n    });\n  }\n}\n"]}