{"version":3,"file":"io-boolean.js","sourceRoot":"","sources":["../src/io-boolean.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAErD;;;;;IAKI;AAEG,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,OAAO;IACpC,MAAM,KAAK,KAAK;QACd,OAAO,SAAS,CAAA;;;;;KAKf,CAAC;IACJ,CAAC;IAcD,QAAQ;QACN,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IACD,IAAI;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACpF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI;YACtE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC5C,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AA/BS;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;wCAChC;AAGf;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC;uCACnB;AAGb;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC;wCACnB;AAGd;IADP,QAAQ,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC;uCACrB;AApBV,SAAS;IADrB,QAAQ;GACI,SAAS,CA0CrB","sourcesContent":["import { Register, Property, IoField } from 'io-gui';\n\n/**\n * Input element for `Boolean` data type displayed as text.\n * It can be configured to display custom `true` or `false` string or icon depending on its `value`.\n *\n * <io-element-demo element=\"io-boolean\" properties='{\"value\": true, \"true\": \"true\", \"false\": \"false\"}'></io-element-demo>\n **/\n@Register\nexport class IoBoolean extends IoField {\n  static get Style() {\n    return /* css */`\n      :host {\n        background-color: transparent;\n        padding: var(--io_spacing) var(--io_spacing);\n      }\n    `;\n  }\n\n  @Property({value: false, type: Boolean, reflect: true})\n  declare value: boolean;\n\n  @Property({value: 'true', type: String})\n  declare true: string;\n\n  @Property({value: 'false', type: String})\n  declare false: string;\n\n  @Property({value: 'switch', type: String})\n  declare role: string;\n\n  _onClick() {\n    this.toggle();\n    this.dispatchEvent('io-boolean-clicked', {value: this.value}, true);\n  }\n  toggle() {\n    this.inputValue(!this.value);\n  }\n  init() {\n    this.changed();\n  }\n  changed() {\n    this.setAttribute('value', Boolean(this.value));\n    this.setAttribute('aria-checked', String(!!this.value));\n    this.setAttribute('aria-invalid', typeof this.value !== 'boolean' ? 'true' : false);\n    const label = this.value ? this.true : this.false;\n    this.template([\n      this.icon ? ['io-icon', {icon: this.icon, stroke: this.stroke}] : null,\n      label ? ['io-label', {label: label}] : null\n    ]);\n  }\n}"]}