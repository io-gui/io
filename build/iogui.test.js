import"mocha";import"chai";import{Binding as e,IoNode as t,RegisterIoNode as o,ProtoChain as p,RegisterIoElement as a,IoElement as r}from"./iogui.js";var __decorate$3=function(e,t,o,p){var a,r=arguments.length,n=r<3?t:null===p?p=Object.getOwnPropertyDescriptor(t,o):p;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,p);else for(var c=e.length-1;c>=0;c--)(a=e[c])&&(n=(r<3?a(n):r>3?a(t,o,n):a(t,o))||n);return r>3&&n&&Object.defineProperty(t,o,n),n};let n=class TestIoNode extends t{static get Properties(){return{prop1:0,prop2:0}}};n=__decorate$3([o],n);class Binding{run(){describe("Binding",(()=>{it("Should initialize with correct default values",(()=>{const t=new n,o=new e(t,"prop1");chai.expect(o.node).to.be.equal(t),chai.expect(o.property).to.be.equal("prop1"),chai.expect(o.targets instanceof Array).to.be.equal(!0),chai.expect(o.targets.length).to.be.equal(0),chai.expect(o.targetProperties instanceof WeakMap).to.be.equal(!0)})),it("Should get and set property value on source node with `value` getter/setter",(()=>{const t=new n,o=new e(t,"prop1");t.prop1=1,chai.expect(o.value).to.be.equal(1),t.prop1=2,chai.expect(o.value).to.be.equal(2),o.value=3,chai.expect(t.prop1).to.be.equal(3)})),it("Should add/remove target nodes and properties with `.addTarget()` and `removeTarget()`",(()=>{const t=new n,o=new e(t,"prop1"),p=new e(t,"prop2"),a=new n,r=new n;o.addTarget(a,"prop1"),p.addTarget(a,"prop2"),p.addTarget(r,"prop1"),p.addTarget(r,"prop2"),chai.expect(o.targets[0]).to.be.equal(a),chai.expect(o.targets[1]).to.be.equal(void 0),chai.expect(p.targets[0]).to.be.equal(a),chai.expect(p.targets[1]).to.be.equal(r),chai.expect(p.targets[2]).to.be.equal(void 0),chai.expect(a._properties.prop1.binding).to.be.equal(o),chai.expect(a._properties.prop2.binding).to.be.equal(p),chai.expect(r._properties.prop1.binding).to.be.equal(p),chai.expect(r._properties.prop2.binding).to.be.equal(p);const c=o.getTargetProperties(a),i=o.getTargetProperties(r);chai.expect(c[0]).to.be.equal("prop1"),chai.expect(c.length).to.be.equal(1),chai.expect(i.length).to.be.equal(0);const l=p.getTargetProperties(a),s=p.getTargetProperties(r);chai.expect(l[0]).to.be.equal("prop2"),chai.expect(l.length).to.be.equal(1),chai.expect(s[0]).to.be.equal("prop1"),chai.expect(s[1]).to.be.equal("prop2"),chai.expect(s.length).to.be.equal(2),p.removeTarget(r,"prop1"),chai.expect(s[0]).to.be.equal("prop2"),chai.expect(s.length).to.be.equal(1),chai.expect(r._properties.prop1.binding).to.be.equal(void 0),p.addTarget(r,"prop1"),chai.expect(s.length).to.be.equal(2),chai.expect(r._properties.prop1.binding).to.be.equal(p),p.removeTarget(r),chai.expect(s.length).to.be.equal(0),chai.expect(r._properties.prop1.binding).to.be.equal(void 0),chai.expect(r._properties.prop2.binding).to.be.equal(void 0)})),it("Should dispose correctly",(()=>{const t=new n,o=new e(t,"prop1");o.dispose(),chai.expect(o.node).to.be.equal(void 0),chai.expect(o.property).to.be.equal(void 0),chai.expect(o.targets).to.be.equal(void 0),chai.expect(o.targetProperties).to.be.equal(void 0)}))}))}}var __decorate$2=function(e,t,o,p){var a,r=arguments.length,n=r<3?t:null===p?p=Object.getOwnPropertyDescriptor(t,o):p;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,p);else for(var c=e.length-1;c>=0;c--)(a=e[c])&&(n=(r<3?a(n):r>3?a(t,o,n):a(t,o))||n);return r>3&&n&&Object.defineProperty(t,o,n),n};class Node{run(){describe("IoNode",(()=>{describe("Registration",(()=>{it("Should have core API functions defined",(()=>{const e=new t;chai.expect(e.setProperty).to.be.a("function"),chai.expect(e.applyProperties).to.be.a("function"),chai.expect(e.setProperties).to.be.a("function"),chai.expect(e.setValue).to.be.a("function"),chai.expect(e.changed).to.be.a("function"),chai.expect(e.queue).to.be.a("function"),chai.expect(e.dispatchQueue).to.be.a("function"),chai.expect(e.dispatchQueueSync).to.be.a("function"),chai.expect(e.throttle).to.be.a("function"),chai.expect(e.onObjectMutated).to.be.a("function"),chai.expect(e.objectMutated).to.be.a("function"),chai.expect(e.bind).to.be.a("function"),chai.expect(e.unbind).to.be.a("function"),chai.expect(e.addEventListener).to.be.a("function"),chai.expect(e.removeEventListener).to.be.a("function"),chai.expect(e.dispatchEvent).to.be.a("function"),chai.expect(e.dispose).to.be.a("function"),e.dispose()})),it("Should register property definitions correctly",(()=>{let e=class TestNode extends t{static get Properties(){return{prop0:{type:String},prop1:{value:!1},prop2:-1,prop3:Number,prop4:Object,prop5:[0,1,2]}}};e=__decorate$2([o],e);const p=new e;chai.expect(p.prop0).to.be.equal(""),chai.expect(p.prop1).to.be.equal(!1),chai.expect(p.prop2).to.be.equal(-1),chai.expect(p.prop3).to.be.equal(0),chai.expect(p.prop4).to.be.deep.equal({}),chai.expect(p.prop5).to.be.deep.equal([0,1,2]),p.dispose()})),it("Should aggregate property definitions from protochain",(()=>{let e=class Object1 extends t{static get Properties(){return{prop1:{value:0},prop2:null}}};e=__decorate$2([o],e);let p=class Object2 extends e{static get Properties(){return{prop1:{value:{},notify:!1,observe:!0},prop2:{notify:!0},prop3:""}}};p=__decorate$2([o],p);const a=new e,r=new p,n=a._protochain.properties,c=r._protochain.properties,i=a._properties,l=r._properties;chai.expect(Object.keys(i)).to.be.eql(["lazy","prop1","prop2"]),chai.expect(Object.keys(l)).to.be.eql(["lazy","prop1","prop2","prop3"]),chai.expect(n.prop1.value).to.be.equal(0),chai.expect(i.prop1.value).to.be.equal(0),chai.expect(i.prop1.type).to.be.equal(Number),chai.expect(i.prop1.notify).to.be.equal(!0),chai.expect(i.prop1.reflect).to.be.equal(0),chai.expect(i.prop1.observe).to.be.equal(!1),chai.expect(c.prop1.value).to.be.eql({}),chai.expect(l.prop1.value).to.be.eql({}),chai.expect(l.prop1.type).to.be.equal(Object),chai.expect(l.prop1.notify).to.be.equal(!1),chai.expect(l.prop1.reflect).to.be.equal(0),chai.expect(l.prop1.observe).to.be.equal(!0),chai.expect(l.prop2.value).to.be.equal(null),chai.expect(l.prop2.type).to.be.equal(void 0),chai.expect(l.prop2.notify).to.be.equal(!0),chai.expect(l.prop2.observe).to.be.equal(!1)})),it("Should favor explicit property definitions over implicit",(()=>{const e=new p(class Object2 extends class Object1{static get Properties(){return{prop1:{value:{},notify:!1,reflect:2,observe:!0}}}}{static get Properties(){return{prop1:[1,2,3]}}}).properties;chai.expect(e.prop1.value).to.be.eql([1,2,3]),chai.expect(e.prop1.type).to.be.equal(Array),chai.expect(e.prop1.notify).to.be.equal(!1),chai.expect(e.prop1.reflect).to.be.equal(2),chai.expect(e.prop1.observe).to.be.equal(!0)})),it("Should correctly register properties with bindigs",(()=>{let p=class TestNode extends t{static get Properties(){return{label:""}}};p=__decorate$2([o],p);const a=new e(new p({label:"binding1"}),"label"),r=new e(new p({label:"binding2"}),"label"),n=new e(new p({label:"binding3"}),"label");let c=class Object1 extends t{static get Properties(){return{prop1:a}}};c=__decorate$2([o],c);let i=class Object2 extends c{static get Properties(){return{prop1:{binding:r},prop3:n}}};i=__decorate$2([o],i);const l=new c,s=new i,h=l._properties,u=s._properties;chai.expect(h.prop1.binding).to.be.equal(a),chai.expect(u.prop1.binding).to.be.equal(r),chai.expect(u.prop3.binding).to.be.equal(n),chai.expect(a.targets[0]).to.be.equal(l),chai.expect(r.targets[0]).to.be.equal(s),chai.expect(n.targets[0]).to.be.equal(s),chai.expect(h.prop1.value).to.be.equal("binding1"),chai.expect(u.prop1.value).to.be.equal("binding2"),chai.expect(u.prop3.value).to.be.equal("binding3")}))})),describe("Construction",(()=>{})),describe("Properties",(()=>{it("Should correctly get/set properties",(()=>{let e=class TestNode extends t{static get Properties(){return{prop1:{value:1}}}};e=__decorate$2([o],e);const p=new e,a=p._properties;chai.expect(a.prop1.value).to.be.equal(1),chai.expect(p.prop1).to.be.equal(1),p.setProperty("prop1",0),chai.expect(a.prop1.value).to.be.equal(0),chai.expect(p.prop1).to.be.equal(0)})),it("Should correctly get/set bound properties",(()=>{let p=class TestNode extends t{static get Properties(){return{label:""}}};p=__decorate$2([o],p);const a=new e(new p({label:"binding1"}),"label"),r=new e(new p({label:"binding2"}),"label");let n=class TestNode2 extends t{static get Properties(){return{prop1:a}}};n=__decorate$2([o],n);const c=new n,i=c._properties;chai.expect(i.prop1.value).to.be.equal("binding1"),chai.expect(c.prop1).to.be.equal("binding1"),chai.expect(i.prop1.binding).to.be.equal(a),chai.expect(a.targets[0]).to.be.equal(c),a.removeTarget(c,"prop1"),c._properties.prop1.binding=void 0,c.setProperty("prop1",r),chai.expect(i.prop1.value).to.be.equal("binding2"),chai.expect(c.prop1).to.be.equal("binding2"),chai.expect(a.targets[0]).to.be.equal(void 0),chai.expect(r.targets[0]).to.be.equal(c)})),it("Should execute attribute reflection on IoElement",(()=>{let e=class TestElementReflection extends r{static get Properties(){return{label:{value:"label1",reflect:1}}}};e=__decorate$2([a],e);const t=new e;chai.expect(t.getAttribute("label")).to.be.equal("label1"),t.label="label2",chai.expect(t.getAttribute("label")).to.be.equal("label2"),t.setProperty("label","label3"),chai.expect(t.getAttribute("label")).to.be.equal("label3")})),it("Should dipatch queue on object value initialization and value set",(()=>{let e=class TestNode extends t{static get Properties(){return{prop:Object}}};e=__decorate$2([o],e);const p=new e;p.addEventListener("prop-changed",(e=>{const t=e.detail.value,o=e.detail.oldValue;chai.expect(t).to.be.eql({}),chai.expect(o).to.be.equal(void 0)})),p.removeEventListener("prop-changed"),p.addEventListener("prop-changed",(e=>{const t=e.detail.value,o=e.detail.oldValue;chai.expect(t).to.be.eql({}),chai.expect(o).to.be.eql({})})),p.prop={},p.removeEventListener("prop-changed"),p.addEventListener("prop-changed",(()=>{chai.expect("This should never happen!").to.be.equal(!0)})),p.setProperty("prop",{},!0)})),it("Should connect/disconnect IoNode-property-values on construction and value set",(()=>{let e=class TestNodeValue extends t{static get Properties(){return{prop:Object,propChangeCounter:0}}propChanged(){this.propChangeCounter++}};e=__decorate$2([o],e);let p=class TestNode extends t{static get Properties(){return{prop:e}}};p=__decorate$2([o],p);const a=new p,r=a.prop;chai.expect(r.propChangeCounter).to.be.equal(1),r.prop={},r.prop={},chai.expect(r.propChangeCounter).to.be.equal(3),r.prop={},chai.expect(r.propChangeCounter).to.be.equal(4),a.prop=new e;const n=a.prop;r.prop={},chai.expect(r.propChangeCounter).to.be.equal(5),chai.expect(n.propChangeCounter).to.be.equal(1)}))})),describe("Reactivity",(()=>{it("Should corectly invoke handler functions on change",(()=>{let e=class TestNode extends t{_changedCounter=0;_prop1ChangedCounter=0;_prop1Change=null;_prop2ChangedCounter=0;_prop2Change=null;static get Properties(){return{prop1:String,prop2:String}}changed(){this._changedCounter++}prop1Changed(e){this._prop1ChangedCounter++,this._prop1Change=e}prop2Changed(e){this._prop2ChangedCounter++,this._prop2Change=e}};e=__decorate$2([o],e);const p=new e;chai.expect(p._changedCounter).to.equal(0),chai.expect(p._prop1ChangedCounter).to.equal(0),chai.expect(p._prop2ChangedCounter).to.equal(0),chai.expect(p._prop1Change?.property).to.equal(void 0),chai.expect(p._prop1Change?.oldValue).to.equal(void 0),chai.expect(p._prop1Change?.value).to.equal(void 0),chai.expect(p._prop2ChangedCounter).to.equal(0),chai.expect(p._prop2Change?.property).to.equal(void 0),chai.expect(p._prop2Change?.oldValue).to.equal(void 0),chai.expect(p._prop2Change?.value).to.equal(void 0),p.prop1="one",chai.expect(p._changedCounter).to.equal(1),chai.expect(p._prop1ChangedCounter).to.equal(1),chai.expect(p._prop2ChangedCounter).to.equal(0),chai.expect(p._prop1Change?.property).to.equal("prop1"),chai.expect(p._prop1Change?.oldValue).to.equal(""),chai.expect(p._prop1Change?.value).to.equal("one"),p.prop1="two",p.prop2="test",chai.expect(p._changedCounter).to.equal(3),chai.expect(p._prop1ChangedCounter).to.equal(2),chai.expect(p._prop1Change?.property).to.equal("prop1"),chai.expect(p._prop1Change?.oldValue).to.equal("one"),chai.expect(p._prop1Change?.value).to.equal("two"),chai.expect(p._prop2ChangedCounter).to.equal(1),chai.expect(p._prop2Change?.property).to.equal("prop2"),chai.expect(p._prop2Change?.oldValue).to.equal(""),chai.expect(p._prop2Change?.value).to.equal("test"),p.setProperties({prop1:"three",prop2:""}),chai.expect(p._changedCounter).to.equal(4),chai.expect(p._prop1ChangedCounter).to.equal(3),chai.expect(p._prop1Change?.property).to.equal("prop1"),chai.expect(p._prop1Change?.oldValue).to.equal("two"),chai.expect(p._prop1Change?.value).to.equal("three"),chai.expect(p._prop2ChangedCounter).to.equal(2),chai.expect(p._prop2Change?.property).to.equal("prop2"),chai.expect(p._prop2Change?.oldValue).to.equal("test"),chai.expect(p._prop2Change?.value).to.equal(""),p.dispose()})),it("should invoke property mutation handler functions on mutation event",(async()=>{let e=class TestNode extends t{_changedCounter=0;_obj1MutatedCounter=0;_obj2MutatedCounter=0;static get Properties(){return{obj1:{type:Object,observe:!0},obj2:{type:Object,observe:!0}}}changed(){this._changedCounter++}obj1Mutated(){this._obj1MutatedCounter++}obj2Mutated(){this._obj2MutatedCounter++}};e=__decorate$2([o],e);const p=new e;chai.expect(p._changedCounter).to.equal(0),chai.expect(p._obj1MutatedCounter).to.equal(0),p.dispatchEvent("object-mutated",{object:p.obj1},!1,window),await nextTick(),chai.expect(p._changedCounter).to.equal(1),chai.expect(p._obj1MutatedCounter).to.equal(1),chai.expect(p._obj2MutatedCounter).to.equal(0),p.dispatchEvent("object-mutated",{object:p.obj2},!1,window),await nextTick(),p.dispose()})),it("should fire change events when connected",(()=>{let e=class TestNode extends t{static get Properties(){return{prop1:String,_onProp1ChangedCounter:0,_onProp1Change:null,_onCustomEventCounter:0,_onCustomEven:null}}static get Listeners(){return{"prop1-changed":"onProp1Changed","custom-event":"onCustomEvent"}}onProp1Changed(e){this._onProp1ChangedCounter++,this._onProp1Change=e}onCustomEvent(e){this._onCustomEventCounter++,this._onCustomEven=e}};e=__decorate$2([o],e);const p=new e;p.prop1="one",chai.expect(p._onProp1ChangedCounter).to.equal(1),chai.expect(p._onProp1Change.detail.property).to.equal("prop1"),chai.expect(p._onProp1Change.detail.oldValue).to.equal(""),chai.expect(p._onProp1Change.detail.value).to.equal("one"),p.dispatchEvent("custom-event",{value:"hello"}),chai.expect(p._onCustomEventCounter).to.equal(1),chai.expect(p._onCustomEven.path[0]).to.equal(p),chai.expect(p._onCustomEven.detail.value).to.equal("hello")}))})),describe("Binding",(()=>{it("should correctly bind properties",(()=>{let p=class TestNode extends t{static get Properties(){return{prop1:String,prop2:String}}};p=__decorate$2([o],p);const a=new p,r=a.bind("prop1");chai.expect(r).to.be.instanceof(e),chai.expect(r.node).to.be.equal(a),chai.expect(r.property).to.be.equal("prop1");const n=new p({prop1:r}),c=new p({prop1:r});c.prop2=r,chai.expect(r.targets[0]).to.be.equal(n),chai.expect(r.targets[1]).to.be.equal(c),chai.expect(r.targetProperties.get(n)[0]).to.be.equal("prop1"),chai.expect(r.targetProperties.get(n)[1]).to.be.equal(void 0),chai.expect(r.targetProperties.get(c)[0]).to.be.equal("prop1"),chai.expect(r.targetProperties.get(c)[1]).to.be.equal("prop2"),a.prop1="one",chai.expect(n.prop1).to.be.equal("one"),chai.expect(n.prop2).to.be.equal(""),chai.expect(c.prop1).to.be.equal("one"),chai.expect(c.prop2).to.be.equal("one"),n.prop1="two",chai.expect(a.prop1).to.be.equal("two"),chai.expect(c.prop1).to.be.equal("two"),chai.expect(r.targets.length).to.be.equal(2),n.dispose(),chai.expect(r.targets.length).to.be.equal(1),c.dispose(),chai.expect(r.targets.length).to.be.equal(0),a.dispose()})),it("Should add/remove targets and targetProperties when assigned to values",(()=>{let p=class TestNode extends t{static get Properties(){return{prop1:String,prop2:String}}};p=__decorate$2([o],p);const a=new p,r=new e(a,"prop1"),n=new e(a,"prop2"),c=new p;c.prop1=r,c.prop2=n;const i=new p({prop1:r}),l=new p({prop1:r,prop2:r});chai.expect(r.targets[0]).to.be.equal(c),chai.expect(r.targets[1]).to.be.equal(i),chai.expect(r.targets[2]).to.be.equal(l),chai.expect(r.targetProperties.get(c)).to.be.eql(["prop1"]),chai.expect(r.targetProperties.get(i)).to.be.eql(["prop1"]),chai.expect(r.targetProperties.get(l)).to.be.eql(["prop1","prop2"]),c.dispose(),i.unbind("prop1"),l.unbind("prop1"),chai.expect(r.targetProperties.get(c)).to.be.eql([]),chai.expect(r.targetProperties.get(i)).to.be.eql([]),chai.expect(r.targetProperties.get(l)).to.be.eql(["prop2"]),i.prop2=r,i.prop1=r,l.prop1=r,chai.expect(r.targetProperties.get(i)).to.be.eql(["prop2","prop1"]),chai.expect(r.targetProperties.get(l)).to.be.eql(["prop2","prop1"])})),it('Should return existing binding or create a new on "bind()"',(()=>{let e=class TestNode extends t{static get Properties(){return{prop1:String,prop2:String}}};e=__decorate$2([o],e);const p=new e,a=p.bind("prop1");chai.expect(a).to.be.equal(p._bindings.prop1),chai.expect(a).to.be.equal(p.bind("prop1"))})),it("Should dispose bindings correctly",(()=>{let e=class TestNode extends t{static get Properties(){return{prop1:String,prop2:String}}};e=__decorate$2([o],e);const p=new e,a=p.bind("prop1");p.unbind("prop1"),chai.expect(p._bindings.prop1).to.be.equal(void 0),chai.expect(a.prop1).to.be.equal(void 0);const r=new e,n=r.bind("prop1");r.dispose(),chai.expect(r._bindings).to.be.eql({}),chai.expect(n.prop1).to.be.equal(void 0)}))}))}))}}var __decorate$1=function(e,t,o,p){var a,r=arguments.length,n=r<3?t:null===p?p=Object.getOwnPropertyDescriptor(t,o):p;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,p);else for(var c=e.length-1;c>=0;c--)(a=e[c])&&(n=(r<3?a(n):r>3?a(t,o,n):a(t,o))||n);return r>3&&n&&Object.defineProperty(t,o,n),n};let c=class TestNode extends t{static get Properties(){return{prop0:String,prop2:1/0}}};c=__decorate$1([o],c);let i=class TestElement extends r{static get Properties(){return{prop0:-1,prop1:{value:"default"},_changedCounter:0,_prop1ChangedCounter:0,_prop1AltCounter:0,_prop1ChangeEvent:null,debug:!0}}static get Listeners(){return{"prop0-changed":"onProp1Change","custom-event":"onCustomEvent"}}reset(){this.prop0=-1,this.prop1="default",this._changedCounter=0,this._prop1ChangedCounter=0,this._prop1AltCounter=0,this._prop1Counter=0,this._customHandlerCounter=0,this._prop1AltChangeEvent=null,this._prop1ChangeEvent=null,this._customHandlerChangeEvent=null}constructor(e){super(e),this.template([["test-subelement",{id:"subelement",prop0:this.bind("prop0")}]]),this.subnode=new c({prop2:this.bind("prop0")})}changed(){this._changedCounter++}prop1Changed(e){this._prop1ChangedCounter++,this._prop1ChangedChange=e}onProp1ChangeAlt(e){this._prop1AltCounter++,this._prop1AltChangeEvent=e}onProp1Change(e){this._prop1Counter++,this._prop1ChangeEvent=e}onCustomEvent(e){this._customHandlerCounter++,this._customHandlerChangeEvent=e}};i=__decorate$1([a],i);let l=class TestSubelement extends r{static get Properties(){return{prop0:0}}};l=__decorate$1([a],l);class Element{_changedCounter;element;constructor(){this._changedCounter=0,this.element=new i({"on-prop0-changed":this.changed.bind(this),"on-prop1-changed":"onProp1ChangeAlt",debug:!0}),document.body.appendChild(this.element)}changed(e){e.target===this.element&&this._changedCounter++}reset(){this.element.reset(),this._changedCounter=0}run(){describe("IoElement",(()=>{describe("Registration",(()=>{it("Should have core API functions defined",(()=>{chai.expect(this.element.id).to.be.equal(""),chai.expect(this.element.tabindex).to.be.equal(""),chai.expect(this.element.contenteditable).to.be.equal(!1),chai.expect(this.element.title).to.be.equal(""),chai.expect(this.element.$).to.be.a("object"),chai.expect(this.element.template).to.be.a("function"),chai.expect(this.element.traverse).to.be.a("function")})),it("Should initialize property definitions correctly",(()=>{chai.expect(this.element.prop0).to.equal(-1),chai.expect(this.element.prop1).to.equal("default")}))})),describe("Construction",(()=>{})),describe("Reactivity",(()=>{it("Should corectly invoke handler functions on change",(()=>{this.reset(),this.element.prop0=1,this.element.prop1="test",chai.expect(this.element._prop1AltCounter).to.equal(1),chai.expect(this.element._changedCounter).to.equal(2),chai.expect(this._changedCounter).to.equal(1)})),it("Should dispatch correct event payloads to handlers",(()=>{this.reset(),this.element.prop0=1,this.element.prop0=0,chai.expect(this.element._prop1ChangeEvent.srcElement).to.equal(this.element),chai.expect(this.element._prop1ChangeEvent.detail.value).to.equal(0),this.element.$.subelement.prop0=2,chai.expect(this.element._prop1ChangeEvent.detail.oldValue).to.equal(0),chai.expect(this.element._prop1ChangeEvent.detail.value).to.equal(2),this.element.dispatchEvent("custom-event",{data:"io"}),chai.expect(this.element._customHandlerChangeEvent.detail.data).to.equal("io")}))})),describe("Binding",(()=>{it("Should update bound values correctly",(()=>{this.element.prop0=1/0,chai.expect(this.element.$.subelement.prop0).to.equal(1/0),this.element.$.subelement.prop0=0,chai.expect(this.element.prop0).to.equal(0)})),it("Should bind to Node node",(()=>{this.element.prop0=1/0,chai.expect(this.element.subnode.prop2).to.equal(1/0),this.element.subnode.prop2=0,chai.expect(this.element.prop0).to.equal(0)})),it("Should disconnect binding when Node node is disconnected",(()=>{this.element.prop0=1/0,chai.expect(this.element.subnode.prop2).to.equal(1/0),this.element.subnode.prop2=2,chai.expect(this.element.prop0).to.equal(2)}))}))}))}}var __decorate=function(e,t,o,p){var a,r=arguments.length,n=r<3?t:null===p?p=Object.getOwnPropertyDescriptor(t,o):p;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,p);else for(var c=e.length-1;c>=0;c--)(a=e[c])&&(n=(r<3?a(n):r>3?a(t,o,n):a(t,o))||n);return r>3&&n&&Object.defineProperty(t,o,n),n};mocha.setup("bdd");const s=document.createElement("div");s.setAttribute("id","mocha"),document.body.appendChild(s),s.style.display="none";let h=!1;async function nextTick(){return new Promise((e=>{setTimeout((()=>{e()}))}))}let u=class IoTest extends r{static get Style(){return"\n      :host #mocha {\n        margin: 0;\n        position: relative;\n      }\n      :host #mocha-report {\n        margin: 2em 1em;\n      }\n      :host #mocha-stats {\n        position: absolute;\n        top: -2em;\n        right: 2em;\n        font-size: 12px;\n        margin: 0;\n      }\n      :host #mocha-stats em {\n        color: var(--io-color);\n      }\n      :host #mocha-stats li {\n        padding: 0;\n      }\n      :host #mocha-stats .progress {\n        display: none;\n      }\n      :host #mocha-stats .passes {\n        color: #0c0;\n      }\n      :host #mocha-stats .failures {\n        color: #f00;\n        font-weight: bold;\n      }\n      :host h2 {\n        padding-right: 2em;\n      }\n      :host .replay {\n        display: none !important;\n      }\n    "}connectedCallback(){super.connectedCallback(),this.appendChild(s),s.style.display="block",function runTests(){h||((new Binding).run(),(new Node).run(),(new Element).run(),mocha.checkLeaks(),mocha.run(),h=!0)}()}disconnectedCallback(){super.disconnectedCallback(),document.body.appendChild(s),s.style.display="none"}};u=__decorate([a],u);export{u as IoTest,nextTick};
